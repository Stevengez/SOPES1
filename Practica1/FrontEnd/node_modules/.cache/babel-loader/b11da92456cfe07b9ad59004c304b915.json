{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n} // Filename: simpletime.js  \n// parts of this based on work found in comp.lang.javascript faq\n//\n// international and local date formats are specified using proper unicode \n// forms http://cldr.unicode.org/translation/date-time\n\n\nvar isNum = function isNum(n) {\n  return !Number.isNaN(Number.parseFloat(n));\n};\n\nvar dateRegex = {\n  iso: /^\\s*(\\d{4})[-/\\.](\\d\\d)[-/\\.](\\d\\d)\\s*$/,\n  usEndian: /^\\s*(\\d\\d)[-/\\.](\\d\\d)[-/\\.](\\d{4})\\s*$/\n};\nvar defFormatRegex = {\n  iso: /yyyy[/.-]mm[/.-]dd/gi,\n  usEndian: /mm[/.-]dd[/.-]yyyy/gi\n};\nvar localeMethods = {\n  getDateSymbolsMonthAbbrev: function getDateSymbolsMonthAbbrev() {\n    return {\n      1: \"Jan\",\n      2: \"Feb\",\n      3: \"Mar\",\n      4: \"Apr\",\n      5: \"May\",\n      6: \"Jun\",\n      7: \"Jul\",\n      8: \"Aug\",\n      9: \"Sep\",\n      10: \"Oct\",\n      11: \"Nov\",\n      12: \"Dec\"\n    };\n  },\n  getDateSymbolsMonthWide: function getDateSymbolsMonthWide() {\n    return {\n      1: \"January\",\n      2: \"February\",\n      3: \"March\",\n      4: \"April\",\n      5: \"May\",\n      6: \"June\",\n      7: \"July\",\n      8: \"August\",\n      9: \"September\",\n      10: \"October\",\n      11: \"November\",\n      12: \"December\"\n    };\n  },\n  getDateSymbolsMonthNarrow: function getDateSymbolsMonthNarrow() {\n    return {\n      1: \"J\",\n      2: \"F\",\n      3: \"M\",\n      4: \"A\",\n      5: \"M\",\n      6: \"J\",\n      7: \"J\",\n      8: \"A\",\n      9: \"S\",\n      10: \"O\",\n      11: \"N\",\n      12: \"D\"\n    };\n  },\n  getDateSymbolsDayAbbrev: function getDateSymbolsDayAbbrev() {\n    return [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n  },\n  getDateSymbolsDayWide: function getDateSymbolsDayWide() {\n    return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  }\n}; // abbreviated month name, ex. `Jan` or `Dec`\n\nvar localeMethods_getNumericMonthNameAbbrev = function localeMethods_getNumericMonthNameAbbrev(monthNum) {\n  return localeMethods.getDateSymbolsMonthAbbrev()[monthNum];\n}; // wide month name, ex. `January` or `December`\n\n\nvar localeMethods_getNumericMonthNameWide = function localeMethods_getNumericMonthNameWide(monthNum) {\n  return localeMethods.getDateSymbolsMonthWide()[monthNum];\n}; // abbreviated day name, ex. `sun` or `thu`      \n\n\nvar localeMethods_getNumericDayNameAbbrev = function localeMethods_getNumericDayNameAbbrev(dayNum) {\n  return localeMethods.getDateSymbolsDayAbbrev()[dayNum];\n}; // wide day name, ex. `Sunday` or `Thursday`      \n\n\nvar localeMethods_getNumericDayNameWide = function localeMethods_getNumericDayNameWide(dayNum) {\n  return localeMethods.getDateSymbolsDayWide()[dayNum];\n};\n\nvar isDateObj = function isDateObj(dateObj) {\n  return dateObj instanceof Date && !Number.isNaN(dateObj);\n}; // ex. 2013, 0008, 0488\n\n\nvar getDateYStr = function getDateYStr(d) {\n  return (\"000\" + d.getFullYear()).slice(-4);\n}; // ex. 12, 10, 07, 04\n\n\nvar getDateMStr = function getDateMStr(d) {\n  return (\"0\" + (d.getMonth() + 1)).slice(-2);\n}; // ex. 12, 10, 07, 04, 30\n\n\nvar getDateDStr = function getDateDStr(d) {\n  return (\"0\" + d.getDate()).slice(-2);\n};\n\nvar getDatehhStr = function getDatehhStr(d) {\n  return (\"0\" + d.getHours()).slice(-2);\n};\n\nvar getDatemmStr = function getDatemmStr(d) {\n  return (\"0\" + d.getMinutes()).slice(-2);\n};\n\nvar getDatessStr = function getDatessStr(d) {\n  return (\"0\" + d.getSeconds()).slice(-2);\n}; // ex. 2013, 8, 488\n\n\nvar getDateYNum = function getDateYNum(d) {\n  return d.getFullYear();\n}; // ex. 12, 10, 7, 4\n\n\nvar getDateMNum = function getDateMNum(d) {\n  return d.getMonth() + 1;\n}; // ex. 12, 10, 7, 4, 30\n\n\nvar getDateDNum = function getDateDNum(d) {\n  return d.getDate();\n};\n\nvar getDateYMDStrArr = function getDateYMDStrArr(d) {\n  return isDateObj(d) ? [getDateYStr(d), getDateMStr(d), getDateDStr(d) //that.getDatehhStr(d),\n  //that.getDatemmStr(d),\n  //that.getDatessStr(d)\n  ] : [];\n}; // return the date as array of numbers\n// ex. [2013, 5, 5]\n\n\nvar getDateYMDNumArr = function getDateYMDNumArr(d) {\n  return isDateObj(d) ? [getDateYNum(d), getDateMNum(d), getDateDNum(d)] : [];\n}; // return a new date object that has time of the given dateObj, defined to \n// the first second of the day.\n\n\nvar getTimeBgnDay = function getTimeBgnDay(dateObj) {\n  var d = new Date(dateObj || null);\n  d.setMilliseconds(0);\n  d.setSeconds(0);\n  d.setMinutes(0);\n  d.setHours(0);\n  return d;\n}; // return a new date object that has time of the given dateObj, defined to \n// the last second of the day.\n\n\nvar getTimeEndDay = function getTimeEndDay(dateObj) {\n  var d = new Date(dateObj || null);\n  d.setMilliseconds(998);\n  d.setSeconds(59);\n  d.setMinutes(59);\n  d.setHours(23);\n  return d;\n}; // return number days that occur in the given month for the given year\n\n\nvar getDaysInMonth = function getDaysInMonth(yNum, mNum) {\n  return new Date(yNum, mNum, 0).getDate();\n}; // if M is greater than 12, a value of 12 (representing M) is returned\n// if M is less than 12, a value of 0 (representing M) is returned\n\n\nvar getMFittedYMDNumArr = function getMFittedYMDNumArr(YMDNumArr) {\n  var _YMDNumArr = _slicedToArray(YMDNumArr, 3),\n      y = _YMDNumArr[0],\n      m = _YMDNumArr[1],\n      d = _YMDNumArr[2];\n\n  if (m <= 0) {\n    m = 1;\n  } else if (m > 12) {\n    m = 12;\n  }\n\n  return [y, m, d];\n}; // this method will return a YMDNumArr with a value of 'D' fitted to fall\n// in the range of the date created by Y and M.\n// \n// for example, if M has 28 days and D is 30, 28 is returned,\n\n\nvar getDFittedYMDNumArr = function getDFittedYMDNumArr(YMDNumArr) {\n  var _YMDNumArr2 = _slicedToArray(YMDNumArr, 3),\n      y = _YMDNumArr2[0],\n      m = _YMDNumArr2[1],\n      d = _YMDNumArr2[2],\n      ymDays = getDaysInMonth(y, m);\n\n  if (d <= 0) {\n    d = 1;\n  } else if (d > ymDays) {\n    d = ymDays;\n  }\n\n  return [y, m, d];\n}; // return date object from string OR number formatted ymdArr\n\n\nvar getYMDArrDate = function getYMDArrDate() {\n  var YMDArr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var _YMDArr = _slicedToArray(YMDArr, 7),\n      _YMDArr$ = _YMDArr[0],\n      y = _YMDArr$ === void 0 ? 0 : _YMDArr$,\n      _YMDArr$2 = _YMDArr[1],\n      m = _YMDArr$2 === void 0 ? 0 : _YMDArr$2,\n      _YMDArr$3 = _YMDArr[2],\n      d = _YMDArr$3 === void 0 ? 0 : _YMDArr$3,\n      _YMDArr$4 = _YMDArr[3],\n      hh = _YMDArr$4 === void 0 ? 0 : _YMDArr$4,\n      _YMDArr$5 = _YMDArr[4],\n      mm = _YMDArr$5 === void 0 ? 0 : _YMDArr$5,\n      _YMDArr$6 = _YMDArr[5],\n      ss = _YMDArr$6 === void 0 ? 0 : _YMDArr$6,\n      _YMDArr$7 = _YMDArr[6],\n      ms = _YMDArr$7 === void 0 ? 0 : _YMDArr$7,\n      date = null;\n\n  if (isNum(y) && isNum(m) && isNum(d)) {\n    date = new Date();\n    date.setFullYear(+y, +m - 1, +d);\n    date.setHours(isNum(hh) ? +hh : 0, isNum(mm) ? +mm : 0, isNum(ss) ? +ss : 0, isNum(ms) ? +ms : 0);\n  }\n\n  return date;\n}; // return a date, with given number of minutes added\n// number may be negative so that the returned date will be in the past\n// \n// optNum: +2 goes forward two. -6 go back 6.\n\n\nvar getMinFromDate = function getMinFromDate(dateObj, optNum) {\n  return new Date(dateObj.getTime() + optNum * 60 * 1000);\n};\n\nvar getMinFromTodayDate = function getMinFromTodayDate(optNum) {\n  return getMinFromDate(new Date(), optNum);\n}; // return a date, with given number of hours added\n// number may be negative so that the returned date will be in the past\n// \n// optNum: +2 goes forward two. -6 go back 6.\n\n\nvar getSecFromDate = function getSecFromDate(dateObj, optNum) {\n  return new Date(dateObj.getTime() + optNum * 1000);\n};\n\nvar getSecFromTodayDate = function getSecFromTodayDate(optNum) {\n  return getMinFromDate(new Date(), optNum);\n}; // return a date, with given number of hours added\n// number may be negative so that the returned date will be in the past\n// \n// optNum: +2 goes forward two. -6 go back 6.\n\n\nvar getHourFromDate = function getHourFromDate(dateObj, optNum) {\n  return new Date(dateObj.getTime() + optNum * 60 * 60 * 1000);\n};\n\nvar getHourFromTodayDate = function getHourFromTodayDate(optNum) {\n  return getMinFromDate(new Date(), optNum);\n}; // return a date, with given number of days added\n// number may be negative so that the returned date will be in the past\n// \n// optNum: +2 goes forward two. -6 go back 6.\n\n\nvar getDayFromDate = function getDayFromDate(dateObj, optNum) {\n  var num = 0,\n      finDate = null,\n      YMDNumArr = getDateYMDNumArr(dateObj || new Date());\n\n  if (YMDNumArr) {\n    if (typeof optNum === 'string') {\n      if (isNum(optNum)) {\n        num = Number.parseInt(+optNum, 10);\n      }\n    } else if (typeof optNum === 'number') {\n      num = +optNum;\n    }\n\n    if (num) YMDNumArr[2] += num;\n    finDate = getYMDArrDate(YMDNumArr);\n  }\n\n  return finDate;\n};\n\nvar getDayFromTodayDate = function getDayFromTodayDate(optNum) {\n  return getDayFromDate(new Date(), optNum);\n}; // return a date, with given number of months added\n// number may be negative so that the returned date will be in the past\n// \n// optNum: +2 goes forward two. -6 go back 6.\n//\n// if original date is on day 30 and new month is only 28 days long, the \n// returned month will have its day 'fitted' so that the new date object\n// will be defined to the latest day of the month\n\n\nvar getMonthFromDate = function getMonthFromDate(dateObj, optNum) {\n  var num = 0,\n      finDate = null,\n      diff,\n      YMDNumArr = getDateYMDNumArr(dateObj || new Date());\n\n  if (YMDNumArr) {\n    if (typeof optNum === 'string') {\n      if (isNum(optNum)) {\n        num = Number.parseInt(+optNum, 10);\n      }\n    } else if (typeof optNum === 'number') {\n      num = +optNum;\n    }\n\n    if (num) {\n      YMDNumArr[1] += num;\n      YMDNumArr = getDFittedYMDNumArr(YMDNumArr);\n    }\n\n    finDate = getYMDArrDate(YMDNumArr);\n  }\n\n  return finDate;\n};\n\nvar getMonthFromTodayDate = function getMonthFromTodayDate(opt) {\n  return getDayFromDate(new Date(), opt);\n}; // return a date, with given number of years added\n// number may be negative so that the returned date will be in the past\n// \n// optNum: +2 goes forward two. -6 go back 6.\n\n\nvar getYearFromDate = function getYearFromDate(dateObj, optNum) {\n  var YMDArr = getDateYMDNumArr(dateObj || new Date());\n\n  if (isNum(optNum)) {\n    YMDArr[0] += +optNum;\n  }\n\n  return getYMDArrDate(YMDArr);\n};\n\nvar getYearFromTodayDate = function getYearFromTodayDate(optNum) {\n  return getYearFromDate(new Date(), optNum);\n}; // return a new date object defined from the given date object\n// returned date is defined to the first day of the month\n// \n// if optNum is provided, optNum days are added to date object\n\n\nvar getFirstOfMonth = function getFirstOfMonth(dateObj, optNum) {\n  var YMDNumArr = getDateYMDNumArr(new Date(dateObj || null)),\n      finDate;\n  YMDNumArr[2] = 1;\n\n  if (isNum(optNum)) {\n    YMDNumArr[2] += +optNum;\n  }\n\n  finDate = getYMDArrDate(YMDNumArr);\n  finDate = getTimeBgnDay(finDate);\n  return finDate;\n}; // return a new date object defined from the given date object\n// returned date is defined to the last day of the month\n\n\nvar getLastOfMonth = function getLastOfMonth(dateObj) {\n  return new Date(dateObj.getFullYear(), dateObj.getMonth() + 1, 0);\n}; // return true if the first date occurs `before` the second date\n\n\nvar isDateBeforeDate = function isDateBeforeDate(dateObj, beforeDateObj) {\n  var now = beforeDateObj,\n      dateObj1 = dateObj,\n      year,\n      yearNow,\n      month,\n      monthNow,\n      date,\n      dateNow;\n  year = dateObj1.getFullYear();\n  yearNow = now.getFullYear();\n\n  if (year <= yearNow) {\n    month = dateObj1.getMonth();\n    monthNow = now.getMonth();\n\n    if (year <= yearNow && month <= monthNow) {\n      date = dateObj1.getDate();\n      dateNow = now.getDate();\n\n      if (year <= yearNow && month <= monthNow && date <= dateNow) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}; // return true if the date occurs `before` today's date\n\n\nvar isDateBeforeToday = function isDateBeforeToday(dateObj) {\n  return isDateBeforeDate(dateObj, new Date());\n}; // return a new date object that has time of the given dateObj, defined to \n// the first second of the first day of the month.\n\n\nvar getTimeBgnMonth = function getTimeBgnMonth(dateObj) {\n  var dateYMDArr = getDateYMDStrArr(dateObj),\n      finDateObj;\n  dateYMDArr[2] = 1;\n  finDateObj = getYMDArrDate(dateYMDArr);\n  finDateObj = getTimeBgnDay(finDateObj);\n  return finDateObj;\n}; // return a new date object that has time of the given dateObj, defined to \n// the last second of the last day of the month.\n\n\nvar getTimeEndMonth = function getTimeEndMonth(dateObj) {\n  var dateYMDArr = getMonthFromDate(dateObj, 1),\n      finDateObj;\n  dateYMDArr = getDateYMDStrArr(dateYMDArr);\n  dateYMDArr[2] = 0; // end of month\n\n  finDateObj = getYMDArrDate(dateYMDArr);\n  finDateObj = getTimeEndDay(finDateObj);\n  return finDateObj;\n}; // ISO 8601\n// accept time as: yyyy.mm.dd, yyyy/mm/dd, yyyy-mm-dd\n//\n// return a date object from a simple ISO formatted date\n\n\nvar parseISO8601 = function parseISO8601(dateStringInRange) {\n  var date = new Date(NaN),\n      month,\n      parts = dateStringInRange.match(dateRegex.iso);\n  if (!parts) return null;\n  month = +parts[2];\n  date.setFullYear(parts[1], month - 1, parts[3]);\n  if (month != date.getMonth() + 1) date = date.getTime(NaN);\n  return date && isNum(date.getTime()) ? date : null;\n};\n\nvar isDefISOFormat = function isDefISOFormat(format) {\n  return defFormatRegex.iso.test(format);\n}; // middle endian\n// accept time as: mm.dd.yyyy, mm/dd/yyyy, mm-dd-yyyy\n//\n// return a date object from a simple US endian formatted date\n\n\nvar parseUSEndian = function parseUSEndian(dateStringInRange) {\n  var date = new Date(NaN),\n      month,\n      parts = dateStringInRange.match(dateRegex.usEndian);\n  if (!parts) return null;\n  month = +parts[1];\n  date.setFullYear(parts[3], month - 1, parts[2]);\n  if (month != date.getMonth() + 1) date = date.getTime(NaN);\n  return date && isNum(date.getTime()) ? date : null;\n};\n\nvar isDefUSEndianFormat = function isDefUSEndianFormat(format) {\n  return defFormatRegex.usEndian.test(format);\n}; // return a simple ISO formatted date from a date object\n// returns a date object in iso standard: yyyy/mm/dd\n\n\nvar getDateAsISO = function getDateAsISO(dateInRange) {\n  var year = dateInRange.getFullYear(),\n      isInRange = year >= 0 && year <= 9999,\n      yyyy,\n      mm,\n      dd;\n\n  if (!isInRange) {\n    throw RangeError(\"formatDate: year must be 0000-9999\");\n  }\n\n  yyyy = (\"000\" + year).slice(-4);\n  mm = (\"0\" + (dateInRange.getMonth() + 1)).slice(-2);\n  dd = (\"0\" + dateInRange.getDate()).slice(-2);\n  return yyyy + \"/\" + mm + \"/\" + dd;\n};\n\nvar getEpochDateAsISO = function getEpochDateAsISO(strEpoch) {\n  var num,\n      date = null;\n\n  if (strEpoch && isNum(strEpoch)) {\n    num = Number.parseInt(strEpoch, 10);\n    date = new Date(num);\n    if (date) date = getDateAsISO(date);\n  }\n\n  return date;\n}; // return a simple US endian formatted date from a date object\n// returns a date object in iso standard: mm-dd-yyyy\n\n\nvar getDateAsUSEndian = function getDateAsUSEndian(dateInRange) {\n  var year = dateInRange.getFullYear(),\n      isInRange = year >= 0 && year <= 9999,\n      yyyy,\n      mm,\n      dd;\n  if (!isInRange) throw RangeError(\"formatDate: year must be 0000-9999\");\n  yyyy = (\"000\" + year).slice(-4);\n  mm = (\"0\" + (dateInRange.getMonth() + 1)).slice(-2);\n  dd = (\"0\" + dateInRange.getDate()).slice(-2);\n  return mm + \"/\" + dd + '/' + yyyy;\n}; // accepts a string or int epoch\n\n\nvar getEpochDateAsUSEndian = function getEpochDateAsUSEndian(strEpoch) {\n  var num, date;\n\n  if (strEpoch && isNum(strEpoch)) {\n    num = Number.parseInt(strEpoch, 10);\n    date = new Date(num);\n    if (date) return getDateAsUSEndian(date);\n  }\n\n  return null;\n}; // return monthly array of dates within the range of bgnDate and endDate. An\n// optional filter function fn may be provided as the third parameter.\n// \n// bgnDate will be the first element in the returned array\n\n\nvar yieldRangeMonthly = function yieldRangeMonthly(bgnDate, endDate, filter) {\n  var date = new Date(bgnDate),\n      dateArr = [],\n      endD = getTimeEndMonth(endDate);\n\n  filter = filter || function (d) {\n    return d;\n  };\n\n  while (date < endD) {\n    dateArr.push(filter(date));\n    date = getMonthFromDate(date, 1);\n  }\n\n  return dateArr;\n}; // return daily array of dates within the range of bgnDate and endDate. An\n// optional filter function fn may be provided as the third parameter.\n// \n// bgnDate will be the first element in the returned array\n\n\nvar yieldRangeDaily = function yieldRangeDaily(bgnDate, endDate, filter) {\n  var bgnD = new Date(bgnDate),\n      endD = new Date(endDate),\n      dateArr = [],\n      f = filter || function (d) {\n    return d;\n  };\n\n  while (bgnD < endD) {\n    dateArr.push(f(new Date(bgnD)));\n    bgnD = getDayFromDate(bgnD, 1);\n  }\n\n  return dateArr;\n}; // return an object whose properties define the elapsed time between\n// bgnDate and endDate\n\n\nvar getElapsedTimeObj = function getElapsedTimeObj(bgnDate, endDate) {\n  var ms = endDate.getTime() - bgnDate.getTime(),\n      floor = Math.floor;\n  return {\n    ms: floor(ms) % 1000,\n    sec: floor(ms / 1000) % 60,\n    // ms in sec  : 1000\n    min: floor(ms / 60000) % 60,\n    // ms in min  : 1000 * 60,\n    hour: floor(ms / 3600000) % 24,\n    // ms in hour : 1000 * 60 * 60,\n    day: floor(ms / 86400000) // ms in day  : 1000 * 60 * 60 * 24; \n\n  };\n};\n\nvar getElapsedTimeFormatted = function getElapsedTimeFormatted(bgnDate, endDate) {\n  var e = getElapsedTimeObj(bgnDate, endDate),\n      min = (e.min.length > 1 ? '' : '0') + e.min,\n      sec = (e.sec.length > 1 ? '' : '0') + e.sec,\n      ms = e.ms.length > 2 ? e.ms[0] + e.ms[1] : e.ms;\n  return min + ':' + (sec.length ? '' : '0') + sec + ':' + ms + ' (mm:ss:ms)';\n}; // return true if given dates fall within the same range specified by `type`\n// \n// are dates within the same `day`?\n// are dates within the same `month`?\n// are dates within the same `year`?\n// \n// type === 'month' | 'year' | 'day'\n\n\nvar isDatesInRange = function isDatesInRange(dateObj1, dateObj2, type) {\n  var d1YMDArr = getDateYMDStrArr(dateObj1),\n      d2YMDArr = getDateYMDStrArr(dateObj2),\n      isInRange = false;\n\n  if (type === 'day') {\n    isInRange = d1YMDArr[0] === d2YMDArr[0] && d1YMDArr[1] === d2YMDArr[1] && d1YMDArr[2] === d2YMDArr[2];\n  } else if (type === 'month') {\n    isInRange = d1YMDArr[0] === d2YMDArr[0] && d1YMDArr[1] === d2YMDArr[1];\n  } else if (type === 'year') {\n    isInRange = d1YMDArr[0] === d2YMDArr[0];\n  }\n\n  return isInRange;\n}; // return a date that is formatted according to the given unicode formatStr\n// http://cldr.unicode.org/translation/date-time\n// \n// using this date object:\n// var date = new Date(1365222221485),\n// \n// each of the following formats would return a result given below:\n// format: \"MMMM d, y h:mm:ss a z\"\n// return: \"April 5, 2013 9:23:41 pm 420\"\n// \n// format: \"MMM d, y h:mm:ss a\"\n// return: \"Apr 5, 2013 9:23:41 pm\"\n// \n// format: \"M/d/yyyy h:mm a\"\n// return: \"4/5/2013 9:23 pm\"\n\n\nvar applyFormatDate = function applyFormatDate(date, format) {\n  var d = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Date(date);\n  var YMDArr,\n      year = d.getFullYear(),\n      isInRange = year >= 0 && year <= 9999,\n      hour,\n      // eslint-disable-next-line max-len\n  tzRe = /'[^']*'|\"[^\"]*\"|yyyyy|yyyy|yyy|yy|y|MMMMM|MMMM|MMM|MM|M|ddddd|dddd|ddd|dd|d|EEEEE|EEEE|EEE|EE|E|hh|h|HH|H|mm|m|ss|s|zzzz|z|a|v/g;\n\n  if (!isInRange) {//throw RangeError(\"formatDate: year must be 0000-9999\");\n  }\n\n  YMDArr = getDateYMDStrArr(d);\n  return format.replace(tzRe, function (match) {\n    switch (match) {\n      case \"y\":\n        // year, numeric, full digit year, 1 to 4 digits\n        return YMDArr[0].replace(/^00?0?/, '');\n\n      case \"yy\":\n        // year, numeric, exactly two digit\n        return YMDArr[0].slice(2, 4);\n\n      case \"yyyy\":\n        // year, numeric, full year\n        return YMDArr[0];\n\n      case \"yyyyy\":\n        // year, narrow, one char\n        return YMDArr[0].slice(3, 4);\n\n      case \"M\":\n        // month, numeric, at least one digit\n        return YMDArr[1].replace(/^0/, '');\n\n      case \"MM\":\n        // month, numeric, at least two digits, 0-padding\n        return YMDArr[1];\n\n      case \"MMM\":\n        // month, alpha, abbreviated string\n        // eslint-disable-next-line max-len\n        return localeMethods_getNumericMonthNameAbbrev(YMDArr[1].replace(/^0/, ''));\n\n      case \"MMMM\":\n        // month, alpha, full string\n        return localeMethods_getNumericMonthNameWide(YMDArr[1].replace(/^0/, ''));\n\n      case \"MMMMM\":\n        // month, alpha, narrow, one char\n        // eslint-disable-next-line max-len\n        return localeMethods_getNumericMonthNameAbbrev(YMDArr[1].replace(/^0/, ''))[0];\n\n      case \"d\":\n        // day, numeric, at least one digit\n        return YMDArr[2].replace(/^0/, '');\n\n      case \"dd\":\n        // day, numeric, at least two digits, 0-padding\n        return YMDArr[2];\n\n      case \"ddd\":\n        // day, alpha, abbreviated string\n        return localeMethods_getNumericDayNameAbbrev(YMDArr[2].replace(/^0/, ''));\n\n      case \"dddd\":\n        // day, alpha, full string\n        return localeMethods_getNumericDayNameWide(YMDArr[2].replace(/^0/, ''));\n\n      case \"ddddd\":\n        // day, alpha, narrow, one char\n        // eslint-disable-next-line max-len\n        return localeMethods_getNumericDayNameAbbrev(YMDArr[2].replace(/^0/, ''))[0];\n\n      case \"E\":\n        // day, alpha, abbreviated string\n        return localeMethods_getNumericDayNameAbbrev(YMDArr[2].replace(/^0/, ''));\n\n      case \"EE\":\n        // day, alpha, abbreviated string\n        return localeMethods_getNumericDayNameAbbrev(YMDArr[2].replace(/^0/, ''));\n\n      case \"EEE\":\n        // day, alpha, abbreviated string\n        return localeMethods_getNumericDayNameAbbrev(YMDArr[2].replace(/^0/, ''));\n\n      case \"EEEE\":\n        // day, alpha, full string\n        return localeMethods_getNumericDayNameWide(YMDArr[2].replace(/^0/, ''));\n\n      case \"EEEEE\":\n        // day, numeric, at least one digit\n        return YMDArr[2].replace(/^0*/, '');\n\n      case \"h\":\n        // hour, numeric, at least one digit\n        return d.getHours() % 12 || 12;\n\n      case \"hh\":\n        // hour, numeric, 12pm at least two digits, 0-padding\n        return (\"0\" + (d.getHours() % 12 || 12)).slice(-2);\n\n      case \"HH\":\n        // hour, numeric, 24pm at least two digits, 0-padding\n        return (\"0\" + d.getHours()).slice(-2);\n\n      case \"H\":\n        // hour, numeric, 24pm\n        return d.getHours();\n\n      case \"m\":\n        // minute, numeric, at least one digit\n        return d.getMinutes();\n\n      case \"mm\":\n        // minute, numeric, at least two digits, 0-padding\n        return (\"0\" + d.getMinutes()).slice(-2);\n\n      case \"s\":\n        // second, numeric, at least one digit\n        return d.getSeconds();\n\n      case \"ss\":\n        // second, numeric, at least two digits, 0-padding\n        return (\"0\" + d.getSeconds()).slice(-2);\n\n      case \"a\":\n        // am, a, pm, p, noon, n (only used with `h`)\n        return d.getHours() < 12 ? 'am' : 'pm';\n\n      case \"zzzz\":\n        // timezone, numeric, at least 4 digits, 0-padding\n        return (\"000\" + d.getTimezoneOffset()).slice(-4);\n\n      case \"z\":\n        // timezone, numeric\n        return d.getTimezoneOffset();\n\n      case \"v\":\n        // timezone, numeric\n        return d.getTimezoneOffset();\n\n      default:\n        return match;\n    }\n  });\n}; // remove all chars. all formatting\n// tokenize around whitespace\n// 10/1/2012 => 10 1 2012\n// M/d/yyyy => M d yyyy\n// \n// will break given:\n// dStr: 10/1/2012039\n// format: M/d/yyyy\n\n\nvar extractDateFormatted = function extractDateFormatted(dStr, format) {\n  var x,\n      ymdArr = [0, 0, 0, 0, 0, 0, 0, 0],\n      ymdTestArr,\n      token,\n      tokenItem,\n      finDateObj,\n      formatRaw = format.replace(/[^\\d\\w]/gi, ' '),\n      dStrRaw = dStr.replace(/[^\\d\\w]/gi, ' '),\n      formatTokens = formatRaw.split(' '),\n      dStrTokens = dStrRaw.split(' ');\n\n  function getAsISO(tokenItem, dateStrObj) {\n    var tokenItemL = tokenItem.toLowerCase(); //return Object.keys(dateStrObj)\n    //  .find(key => dateStrObj[key].toLowerCase() === tokenItemL) || '';\n\n    for (var o in dateStrObj) {\n      if (dateStrObj.hasOwnProperty(o)) {\n        if (dateStrObj[o].toLowerCase() === tokenItemL) return o;\n      }\n    }\n\n    return '';\n  }\n\n  formatTokens.forEach(function (token, x) {\n    tokenItem = dStrTokens[x];\n\n    if (token.match(/yyyyy|yyyy|yyy|yy|y/)) {\n      if (token === \"y\" && isNum(tokenItem)) {\n        // year, numeric, full digit year, 1 to 4 digits\n        if (tokenItem.match(/^\\d\\d?\\d?\\d?$/)) {\n          ymdArr[0] = tokenItem + '';\n        }\n      } else if (token === \"yy\" && isNum(tokenItem)) {\n        // year, numeric, exactly two digit\n        if (tokenItem.match(/^\\d\\d$/)) {\n          ymdArr[0] = tokenItem + '';\n        }\n      } else if (token === \"yyyy\" && isNum(tokenItem)) {\n        // year, numeric, full year\n        if (tokenItem.match(/^\\d\\d?\\d?\\d?$/)) {\n          ymdArr[0] = tokenItem + '';\n        }\n      } else if (token === \"yyyyy\" && isNum(tokenItem)) {\n        // year, narrow, one char\n        if (tokenItem.match(/^\\d?$/)) {\n          ymdArr[0] = tokenItem + '';\n        }\n      }\n    } else if (token.match(/MMMMM|MMMM|MMM|MM|M/)) {\n      if (token === \"M\" && isNum(tokenItem)) {\n        // month, numeric, at least one digit\n        if (tokenItem.match(/^\\d\\d?$/)) {\n          ymdArr[1] = tokenItem + '';\n        }\n      } else if (token === \"MM\" && isNum(tokenItem)) {\n        // month, numeric, at least two digits, 0-padding\n        if (tokenItem.match(/^\\d\\d?$/)) {\n          ymdArr[1] = tokenItem + '';\n        }\n      } else if (token === \"MMM\") {\n        // month, alpha, abbreviated string\n        // eslint-disable-next-line max-len\n        ymdArr[1] = getAsISO(tokenItem, localeMethods.getDateSymbolsMonthAbbrev());\n      } else if (token === \"MMMM\") {\n        // month, alpha, full string\n        // eslint-disable-next-line max-len\n        ymdArr[1] = getAsISO(tokenItem, localeMethods.getDateSymbolsMonthWide());\n      } else if (token === \"MMMMM\") {\n        // month, alpha, narrow, one char\n        // eslint-disable-next-line max-len\n        ymdArr[1] = getAsISO(tokenItem, localeMethods.getDateSymbolsMonthNarrow());\n      }\n    } else if (token.match(/ddddd|dddd|ddd|dd|d/)) {\n      if (token === \"d\" && isNum(tokenItem)) {\n        // day, numeric, at least one digit\n        if (tokenItem.match(/^\\d\\d?$/)) {\n          ymdArr[2] = tokenItem + '';\n        }\n      } else if (token === \"dd\" && isNum(tokenItem)) {\n        // day, numeric, at least two digits, 0-padding\n        if (tokenItem.match(/^\\d\\d?$/)) {\n          ymdArr[2] = tokenItem + '';\n        }\n      } else if (token === \"ddd\") {\n        // day, alpha, abbreviated string\n        // eslint-disable-next-line max-len\n        ymdArr[2] = getAsISO(tokenItem, localeMethods.getDateSymbolsDayAbbrev());\n      } else if (token === \"dddd\") {\n        // day, alpha, full string\n        ymdArr[2] = getAsISO(tokenItem, localeMethods.getDateSymbolsDayWide());\n      } else if (token === \"ddddd\") {\n        // day, alpha, narrow, one char\n        // eslint-disable-next-line max-len\n        ymdArr[2] = getAsISO(tokenItem, localeMethods.getDateSymbolsDayNarrow());\n      }\n    } else if (token.match(/h|H/) && isNum(tokenItem)) {\n      //hour. h for 12 hour, H for 24.\n      if (token.match(/h/)) {\n        ymdArr[3] = +tokenItem % 12 || 12;\n      } else {\n        ymdArr[3] = tokenItem + '';\n      }\n    } else if (token.match(/mm?/) && isNum(tokenItem)) {\n      //minute\n      ymdArr[4] = tokenItem + '';\n    } else if (token.match(/ss?/) && isNum(tokenItem)) {\n      //second\n      ymdArr[5] = tokenItem + '';\n    } else if (token.match(/a/)) {\n      // am, a, pm, p, noon, n\n      if (/pm?/.test(tokenItem)) {\n        // assumes pm occurs after hour\n        ymdArr[3] += 12;\n      }\n    } else if (token.match(/v|z/)) {\n      // Pacific Time, Paris Time\n      ymdArr[6] = tokenItem + '';\n    }\n  });\n\n  if (ymdArr[0] && ymdArr[1] && ymdArr[2]) {\n    // if `m` or `d` values are too large or small, dateObj is still\n    // generated as per specificiation `15.9 Date Objects`\n    // to avoid confusion we invalidate such dates by reconverting them\n    // to ymdArr and checking the values to be sure they match\n    //\n    // ex. '01/40/1958' would not pass through here\n    if (finDateObj = getYMDArrDate(ymdArr)) {\n      ymdTestArr = getDateYMDNumArr(finDateObj);\n\n      if (ymdTestArr[0] === +ymdArr[0] && ymdTestArr[1] === +ymdArr[1] && ymdTestArr[2] === +ymdArr[2]) {\n        return finDateObj;\n      }\n    }\n  }\n};\n\nvar _default = {\n  isNum: isNum,\n  dateRegex: dateRegex,\n  defFormatRegex: defFormatRegex,\n  localeMethods: localeMethods,\n  localeMethods_getNumericMonthNameAbbrev: localeMethods_getNumericMonthNameAbbrev,\n  localeMethods_getNumericMonthNameWide: localeMethods_getNumericMonthNameWide,\n  localeMethods_getNumericDayNameAbbrev: localeMethods_getNumericDayNameAbbrev,\n  localeMethods_getNumericDayNameWide: localeMethods_getNumericDayNameWide,\n  isDateObj: isDateObj,\n  getDateYStr: getDateYStr,\n  getDateMStr: getDateMStr,\n  getDateDStr: getDateDStr,\n  getDatehhStr: getDatehhStr,\n  getDatemmStr: getDatemmStr,\n  getDatessStr: getDatessStr,\n  getDateYNum: getDateYNum,\n  getDateMNum: getDateMNum,\n  getDateDNum: getDateDNum,\n  getDateYMDStrArr: getDateYMDStrArr,\n  getDateYMDNumArr: getDateYMDNumArr,\n  getYMDArrDate: getYMDArrDate,\n  getSecFromDate: getSecFromDate,\n  getSecFromTodayDate: getSecFromTodayDate,\n  getMinFromDate: getMinFromDate,\n  getMinFromTodayDate: getMinFromTodayDate,\n  getHourFromDate: getHourFromDate,\n  getHourFromTodayDate: getHourFromTodayDate,\n  getDayFromDate: getDayFromDate,\n  getDayFromTodayDate: getDayFromTodayDate,\n  getMonthFromDate: getMonthFromDate,\n  getMonthFromTodayDate: getMonthFromTodayDate,\n  getYearFromDate: getYearFromDate,\n  getYearFromTodayDate: getYearFromTodayDate,\n  getDaysInMonth: getDaysInMonth,\n  getMFittedYMDNumArr: getMFittedYMDNumArr,\n  getDFittedYMDNumArr: getDFittedYMDNumArr,\n  getFirstOfMonth: getFirstOfMonth,\n  getLastOfMonth: getLastOfMonth,\n  isDateBeforeDate: isDateBeforeDate,\n  isDateBeforeToday: isDateBeforeToday,\n  getTimeBgnMonth: getTimeBgnMonth,\n  getTimeEndMonth: getTimeEndMonth,\n  getTimeBgnDay: getTimeBgnDay,\n  getTimeEndDay: getTimeEndDay,\n  parseISO8601: parseISO8601,\n  isDefISOFormat: isDefISOFormat,\n  parseUSEndian: parseUSEndian,\n  isDefUSEndianFormat: isDefUSEndianFormat,\n  getDateAsISO: getDateAsISO,\n  getEpochDateAsISO: getEpochDateAsISO,\n  getDateAsUSEndian: getDateAsUSEndian,\n  getEpochDateAsUSEndian: getEpochDateAsUSEndian,\n  yieldRangeMonthly: yieldRangeMonthly,\n  yieldRangeDaily: yieldRangeDaily,\n  getElapsedTimeObj: getElapsedTimeObj,\n  getElapsedTimeFormatted: getElapsedTimeFormatted,\n  isDatesInRange: isDatesInRange,\n  applyFormatDate: applyFormatDate,\n  extractDateFormatted: extractDateFormatted\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/stevengez/Documentos/GitHub/SOPES1/Practica1/FrontEnd/node_modules/simpletime/simpletime.dist.js"],"names":["Object","defineProperty","exports","value","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","err","isArray","isNum","Number","isNaN","parseFloat","dateRegex","iso","usEndian","defFormatRegex","localeMethods","getDateSymbolsMonthAbbrev","getDateSymbolsMonthWide","getDateSymbolsMonthNarrow","getDateSymbolsDayAbbrev","getDateSymbolsDayWide","localeMethods_getNumericMonthNameAbbrev","monthNum","localeMethods_getNumericMonthNameWide","localeMethods_getNumericDayNameAbbrev","dayNum","localeMethods_getNumericDayNameWide","isDateObj","dateObj","Date","getDateYStr","d","getFullYear","getDateMStr","getMonth","getDateDStr","getDate","getDatehhStr","getHours","getDatemmStr","getMinutes","getDatessStr","getSeconds","getDateYNum","getDateMNum","getDateDNum","getDateYMDStrArr","getDateYMDNumArr","getTimeBgnDay","setMilliseconds","setSeconds","setMinutes","setHours","getTimeEndDay","getDaysInMonth","yNum","mNum","getMFittedYMDNumArr","YMDNumArr","_YMDNumArr","y","m","getDFittedYMDNumArr","_YMDNumArr2","ymDays","getYMDArrDate","YMDArr","arguments","_YMDArr","_YMDArr$","_YMDArr$2","_YMDArr$3","_YMDArr$4","hh","_YMDArr$5","mm","_YMDArr$6","ss","_YMDArr$7","ms","date","setFullYear","getMinFromDate","optNum","getTime","getMinFromTodayDate","getSecFromDate","getSecFromTodayDate","getHourFromDate","getHourFromTodayDate","getDayFromDate","num","finDate","parseInt","getDayFromTodayDate","getMonthFromDate","diff","getMonthFromTodayDate","opt","getYearFromDate","getYearFromTodayDate","getFirstOfMonth","getLastOfMonth","isDateBeforeDate","beforeDateObj","now","dateObj1","year","yearNow","month","monthNow","dateNow","isDateBeforeToday","getTimeBgnMonth","dateYMDArr","finDateObj","getTimeEndMonth","parseISO8601","dateStringInRange","NaN","parts","match","isDefISOFormat","format","parseUSEndian","isDefUSEndianFormat","getDateAsISO","dateInRange","isInRange","yyyy","dd","RangeError","getEpochDateAsISO","strEpoch","getDateAsUSEndian","getEpochDateAsUSEndian","yieldRangeMonthly","bgnDate","endDate","filter","dateArr","endD","yieldRangeDaily","bgnD","f","getElapsedTimeObj","floor","Math","sec","min","hour","day","getElapsedTimeFormatted","e","isDatesInRange","dateObj2","type","d1YMDArr","d2YMDArr","applyFormatDate","tzRe","replace","getTimezoneOffset","extractDateFormatted","dStr","x","ymdArr","ymdTestArr","token","tokenItem","formatRaw","dStrRaw","formatTokens","split","dStrTokens","getAsISO","dateStrObj","tokenItemL","toLowerCase","hasOwnProperty","forEach","getDateSymbolsDayNarrow","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// Filename: simpletime.js  \n// parts of this based on work found in comp.lang.javascript faq\n//\n// international and local date formats are specified using proper unicode \n// forms http://cldr.unicode.org/translation/date-time\nvar isNum = function isNum(n) {\n  return !Number.isNaN(Number.parseFloat(n));\n};\n\nvar dateRegex = {\n  iso: /^\\s*(\\d{4})[-/\\.](\\d\\d)[-/\\.](\\d\\d)\\s*$/,\n  usEndian: /^\\s*(\\d\\d)[-/\\.](\\d\\d)[-/\\.](\\d{4})\\s*$/\n};\nvar defFormatRegex = {\n  iso: /yyyy[/.-]mm[/.-]dd/gi,\n  usEndian: /mm[/.-]dd[/.-]yyyy/gi\n};\nvar localeMethods = {\n  getDateSymbolsMonthAbbrev: function getDateSymbolsMonthAbbrev() {\n    return {\n      1: \"Jan\",\n      2: \"Feb\",\n      3: \"Mar\",\n      4: \"Apr\",\n      5: \"May\",\n      6: \"Jun\",\n      7: \"Jul\",\n      8: \"Aug\",\n      9: \"Sep\",\n      10: \"Oct\",\n      11: \"Nov\",\n      12: \"Dec\"\n    };\n  },\n  getDateSymbolsMonthWide: function getDateSymbolsMonthWide() {\n    return {\n      1: \"January\",\n      2: \"February\",\n      3: \"March\",\n      4: \"April\",\n      5: \"May\",\n      6: \"June\",\n      7: \"July\",\n      8: \"August\",\n      9: \"September\",\n      10: \"October\",\n      11: \"November\",\n      12: \"December\"\n    };\n  },\n  getDateSymbolsMonthNarrow: function getDateSymbolsMonthNarrow() {\n    return {\n      1: \"J\",\n      2: \"F\",\n      3: \"M\",\n      4: \"A\",\n      5: \"M\",\n      6: \"J\",\n      7: \"J\",\n      8: \"A\",\n      9: \"S\",\n      10: \"O\",\n      11: \"N\",\n      12: \"D\"\n    };\n  },\n  getDateSymbolsDayAbbrev: function getDateSymbolsDayAbbrev() {\n    return [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\n  },\n  getDateSymbolsDayWide: function getDateSymbolsDayWide() {\n    return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  }\n}; // abbreviated month name, ex. `Jan` or `Dec`\n\nvar localeMethods_getNumericMonthNameAbbrev = function localeMethods_getNumericMonthNameAbbrev(monthNum) {\n  return localeMethods.getDateSymbolsMonthAbbrev()[monthNum];\n}; // wide month name, ex. `January` or `December`\n\n\nvar localeMethods_getNumericMonthNameWide = function localeMethods_getNumericMonthNameWide(monthNum) {\n  return localeMethods.getDateSymbolsMonthWide()[monthNum];\n}; // abbreviated day name, ex. `sun` or `thu`      \n\n\nvar localeMethods_getNumericDayNameAbbrev = function localeMethods_getNumericDayNameAbbrev(dayNum) {\n  return localeMethods.getDateSymbolsDayAbbrev()[dayNum];\n}; // wide day name, ex. `Sunday` or `Thursday`      \n\n\nvar localeMethods_getNumericDayNameWide = function localeMethods_getNumericDayNameWide(dayNum) {\n  return localeMethods.getDateSymbolsDayWide()[dayNum];\n};\n\nvar isDateObj = function isDateObj(dateObj) {\n  return dateObj instanceof Date && !Number.isNaN(dateObj);\n}; // ex. 2013, 0008, 0488\n\n\nvar getDateYStr = function getDateYStr(d) {\n  return (\"000\" + d.getFullYear()).slice(-4);\n}; // ex. 12, 10, 07, 04\n\n\nvar getDateMStr = function getDateMStr(d) {\n  return (\"0\" + (d.getMonth() + 1)).slice(-2);\n}; // ex. 12, 10, 07, 04, 30\n\n\nvar getDateDStr = function getDateDStr(d) {\n  return (\"0\" + d.getDate()).slice(-2);\n};\n\nvar getDatehhStr = function getDatehhStr(d) {\n  return (\"0\" + d.getHours()).slice(-2);\n};\n\nvar getDatemmStr = function getDatemmStr(d) {\n  return (\"0\" + d.getMinutes()).slice(-2);\n};\n\nvar getDatessStr = function getDatessStr(d) {\n  return (\"0\" + d.getSeconds()).slice(-2);\n}; // ex. 2013, 8, 488\n\n\nvar getDateYNum = function getDateYNum(d) {\n  return d.getFullYear();\n}; // ex. 12, 10, 7, 4\n\n\nvar getDateMNum = function getDateMNum(d) {\n  return d.getMonth() + 1;\n}; // ex. 12, 10, 7, 4, 30\n\n\nvar getDateDNum = function getDateDNum(d) {\n  return d.getDate();\n};\n\nvar getDateYMDStrArr = function getDateYMDStrArr(d) {\n  return isDateObj(d) ? [getDateYStr(d), getDateMStr(d), getDateDStr(d) //that.getDatehhStr(d),\n  //that.getDatemmStr(d),\n  //that.getDatessStr(d)\n  ] : [];\n}; // return the date as array of numbers\n// ex. [2013, 5, 5]\n\n\nvar getDateYMDNumArr = function getDateYMDNumArr(d) {\n  return isDateObj(d) ? [getDateYNum(d), getDateMNum(d), getDateDNum(d)] : [];\n}; // return a new date object that has time of the given dateObj, defined to \n// the first second of the day.\n\n\nvar getTimeBgnDay = function getTimeBgnDay(dateObj) {\n  var d = new Date(dateObj || null);\n  d.setMilliseconds(0);\n  d.setSeconds(0);\n  d.setMinutes(0);\n  d.setHours(0);\n  return d;\n}; // return a new date object that has time of the given dateObj, defined to \n// the last second of the day.\n\n\nvar getTimeEndDay = function getTimeEndDay(dateObj) {\n  var d = new Date(dateObj || null);\n  d.setMilliseconds(998);\n  d.setSeconds(59);\n  d.setMinutes(59);\n  d.setHours(23);\n  return d;\n}; // return number days that occur in the given month for the given year\n\n\nvar getDaysInMonth = function getDaysInMonth(yNum, mNum) {\n  return new Date(yNum, mNum, 0).getDate();\n}; // if M is greater than 12, a value of 12 (representing M) is returned\n// if M is less than 12, a value of 0 (representing M) is returned\n\n\nvar getMFittedYMDNumArr = function getMFittedYMDNumArr(YMDNumArr) {\n  var _YMDNumArr = _slicedToArray(YMDNumArr, 3),\n      y = _YMDNumArr[0],\n      m = _YMDNumArr[1],\n      d = _YMDNumArr[2];\n\n  if (m <= 0) {\n    m = 1;\n  } else if (m > 12) {\n    m = 12;\n  }\n\n  return [y, m, d];\n}; // this method will return a YMDNumArr with a value of 'D' fitted to fall\n// in the range of the date created by Y and M.\n// \n// for example, if M has 28 days and D is 30, 28 is returned,\n\n\nvar getDFittedYMDNumArr = function getDFittedYMDNumArr(YMDNumArr) {\n  var _YMDNumArr2 = _slicedToArray(YMDNumArr, 3),\n      y = _YMDNumArr2[0],\n      m = _YMDNumArr2[1],\n      d = _YMDNumArr2[2],\n      ymDays = getDaysInMonth(y, m);\n\n  if (d <= 0) {\n    d = 1;\n  } else if (d > ymDays) {\n    d = ymDays;\n  }\n\n  return [y, m, d];\n}; // return date object from string OR number formatted ymdArr\n\n\nvar getYMDArrDate = function getYMDArrDate() {\n  var YMDArr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  var _YMDArr = _slicedToArray(YMDArr, 7),\n      _YMDArr$ = _YMDArr[0],\n      y = _YMDArr$ === void 0 ? 0 : _YMDArr$,\n      _YMDArr$2 = _YMDArr[1],\n      m = _YMDArr$2 === void 0 ? 0 : _YMDArr$2,\n      _YMDArr$3 = _YMDArr[2],\n      d = _YMDArr$3 === void 0 ? 0 : _YMDArr$3,\n      _YMDArr$4 = _YMDArr[3],\n      hh = _YMDArr$4 === void 0 ? 0 : _YMDArr$4,\n      _YMDArr$5 = _YMDArr[4],\n      mm = _YMDArr$5 === void 0 ? 0 : _YMDArr$5,\n      _YMDArr$6 = _YMDArr[5],\n      ss = _YMDArr$6 === void 0 ? 0 : _YMDArr$6,\n      _YMDArr$7 = _YMDArr[6],\n      ms = _YMDArr$7 === void 0 ? 0 : _YMDArr$7,\n      date = null;\n\n  if (isNum(y) && isNum(m) && isNum(d)) {\n    date = new Date();\n    date.setFullYear(+y, +m - 1, +d);\n    date.setHours(isNum(hh) ? +hh : 0, isNum(mm) ? +mm : 0, isNum(ss) ? +ss : 0, isNum(ms) ? +ms : 0);\n  }\n\n  return date;\n}; // return a date, with given number of minutes added\n// number may be negative so that the returned date will be in the past\n// \n// optNum: +2 goes forward two. -6 go back 6.\n\n\nvar getMinFromDate = function getMinFromDate(dateObj, optNum) {\n  return new Date(dateObj.getTime() + optNum * 60 * 1000);\n};\n\nvar getMinFromTodayDate = function getMinFromTodayDate(optNum) {\n  return getMinFromDate(new Date(), optNum);\n}; // return a date, with given number of hours added\n// number may be negative so that the returned date will be in the past\n// \n// optNum: +2 goes forward two. -6 go back 6.\n\n\nvar getSecFromDate = function getSecFromDate(dateObj, optNum) {\n  return new Date(dateObj.getTime() + optNum * 1000);\n};\n\nvar getSecFromTodayDate = function getSecFromTodayDate(optNum) {\n  return getMinFromDate(new Date(), optNum);\n}; // return a date, with given number of hours added\n// number may be negative so that the returned date will be in the past\n// \n// optNum: +2 goes forward two. -6 go back 6.\n\n\nvar getHourFromDate = function getHourFromDate(dateObj, optNum) {\n  return new Date(dateObj.getTime() + optNum * 60 * 60 * 1000);\n};\n\nvar getHourFromTodayDate = function getHourFromTodayDate(optNum) {\n  return getMinFromDate(new Date(), optNum);\n}; // return a date, with given number of days added\n// number may be negative so that the returned date will be in the past\n// \n// optNum: +2 goes forward two. -6 go back 6.\n\n\nvar getDayFromDate = function getDayFromDate(dateObj, optNum) {\n  var num = 0,\n      finDate = null,\n      YMDNumArr = getDateYMDNumArr(dateObj || new Date());\n\n  if (YMDNumArr) {\n    if (typeof optNum === 'string') {\n      if (isNum(optNum)) {\n        num = Number.parseInt(+optNum, 10);\n      }\n    } else if (typeof optNum === 'number') {\n      num = +optNum;\n    }\n\n    if (num) YMDNumArr[2] += num;\n    finDate = getYMDArrDate(YMDNumArr);\n  }\n\n  return finDate;\n};\n\nvar getDayFromTodayDate = function getDayFromTodayDate(optNum) {\n  return getDayFromDate(new Date(), optNum);\n}; // return a date, with given number of months added\n// number may be negative so that the returned date will be in the past\n// \n// optNum: +2 goes forward two. -6 go back 6.\n//\n// if original date is on day 30 and new month is only 28 days long, the \n// returned month will have its day 'fitted' so that the new date object\n// will be defined to the latest day of the month\n\n\nvar getMonthFromDate = function getMonthFromDate(dateObj, optNum) {\n  var num = 0,\n      finDate = null,\n      diff,\n      YMDNumArr = getDateYMDNumArr(dateObj || new Date());\n\n  if (YMDNumArr) {\n    if (typeof optNum === 'string') {\n      if (isNum(optNum)) {\n        num = Number.parseInt(+optNum, 10);\n      }\n    } else if (typeof optNum === 'number') {\n      num = +optNum;\n    }\n\n    if (num) {\n      YMDNumArr[1] += num;\n      YMDNumArr = getDFittedYMDNumArr(YMDNumArr);\n    }\n\n    finDate = getYMDArrDate(YMDNumArr);\n  }\n\n  return finDate;\n};\n\nvar getMonthFromTodayDate = function getMonthFromTodayDate(opt) {\n  return getDayFromDate(new Date(), opt);\n}; // return a date, with given number of years added\n// number may be negative so that the returned date will be in the past\n// \n// optNum: +2 goes forward two. -6 go back 6.\n\n\nvar getYearFromDate = function getYearFromDate(dateObj, optNum) {\n  var YMDArr = getDateYMDNumArr(dateObj || new Date());\n\n  if (isNum(optNum)) {\n    YMDArr[0] += +optNum;\n  }\n\n  return getYMDArrDate(YMDArr);\n};\n\nvar getYearFromTodayDate = function getYearFromTodayDate(optNum) {\n  return getYearFromDate(new Date(), optNum);\n}; // return a new date object defined from the given date object\n// returned date is defined to the first day of the month\n// \n// if optNum is provided, optNum days are added to date object\n\n\nvar getFirstOfMonth = function getFirstOfMonth(dateObj, optNum) {\n  var YMDNumArr = getDateYMDNumArr(new Date(dateObj || null)),\n      finDate;\n  YMDNumArr[2] = 1;\n\n  if (isNum(optNum)) {\n    YMDNumArr[2] += +optNum;\n  }\n\n  finDate = getYMDArrDate(YMDNumArr);\n  finDate = getTimeBgnDay(finDate);\n  return finDate;\n}; // return a new date object defined from the given date object\n// returned date is defined to the last day of the month\n\n\nvar getLastOfMonth = function getLastOfMonth(dateObj) {\n  return new Date(dateObj.getFullYear(), dateObj.getMonth() + 1, 0);\n}; // return true if the first date occurs `before` the second date\n\n\nvar isDateBeforeDate = function isDateBeforeDate(dateObj, beforeDateObj) {\n  var now = beforeDateObj,\n      dateObj1 = dateObj,\n      year,\n      yearNow,\n      month,\n      monthNow,\n      date,\n      dateNow;\n  year = dateObj1.getFullYear();\n  yearNow = now.getFullYear();\n\n  if (year <= yearNow) {\n    month = dateObj1.getMonth();\n    monthNow = now.getMonth();\n\n    if (year <= yearNow && month <= monthNow) {\n      date = dateObj1.getDate();\n      dateNow = now.getDate();\n\n      if (year <= yearNow && month <= monthNow && date <= dateNow) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}; // return true if the date occurs `before` today's date\n\n\nvar isDateBeforeToday = function isDateBeforeToday(dateObj) {\n  return isDateBeforeDate(dateObj, new Date());\n}; // return a new date object that has time of the given dateObj, defined to \n// the first second of the first day of the month.\n\n\nvar getTimeBgnMonth = function getTimeBgnMonth(dateObj) {\n  var dateYMDArr = getDateYMDStrArr(dateObj),\n      finDateObj;\n  dateYMDArr[2] = 1;\n  finDateObj = getYMDArrDate(dateYMDArr);\n  finDateObj = getTimeBgnDay(finDateObj);\n  return finDateObj;\n}; // return a new date object that has time of the given dateObj, defined to \n// the last second of the last day of the month.\n\n\nvar getTimeEndMonth = function getTimeEndMonth(dateObj) {\n  var dateYMDArr = getMonthFromDate(dateObj, 1),\n      finDateObj;\n  dateYMDArr = getDateYMDStrArr(dateYMDArr);\n  dateYMDArr[2] = 0; // end of month\n\n  finDateObj = getYMDArrDate(dateYMDArr);\n  finDateObj = getTimeEndDay(finDateObj);\n  return finDateObj;\n}; // ISO 8601\n// accept time as: yyyy.mm.dd, yyyy/mm/dd, yyyy-mm-dd\n//\n// return a date object from a simple ISO formatted date\n\n\nvar parseISO8601 = function parseISO8601(dateStringInRange) {\n  var date = new Date(NaN),\n      month,\n      parts = dateStringInRange.match(dateRegex.iso);\n  if (!parts) return null;\n  month = +parts[2];\n  date.setFullYear(parts[1], month - 1, parts[3]);\n  if (month != date.getMonth() + 1) date = date.getTime(NaN);\n  return date && isNum(date.getTime()) ? date : null;\n};\n\nvar isDefISOFormat = function isDefISOFormat(format) {\n  return defFormatRegex.iso.test(format);\n}; // middle endian\n// accept time as: mm.dd.yyyy, mm/dd/yyyy, mm-dd-yyyy\n//\n// return a date object from a simple US endian formatted date\n\n\nvar parseUSEndian = function parseUSEndian(dateStringInRange) {\n  var date = new Date(NaN),\n      month,\n      parts = dateStringInRange.match(dateRegex.usEndian);\n  if (!parts) return null;\n  month = +parts[1];\n  date.setFullYear(parts[3], month - 1, parts[2]);\n  if (month != date.getMonth() + 1) date = date.getTime(NaN);\n  return date && isNum(date.getTime()) ? date : null;\n};\n\nvar isDefUSEndianFormat = function isDefUSEndianFormat(format) {\n  return defFormatRegex.usEndian.test(format);\n}; // return a simple ISO formatted date from a date object\n// returns a date object in iso standard: yyyy/mm/dd\n\n\nvar getDateAsISO = function getDateAsISO(dateInRange) {\n  var year = dateInRange.getFullYear(),\n      isInRange = year >= 0 && year <= 9999,\n      yyyy,\n      mm,\n      dd;\n\n  if (!isInRange) {\n    throw RangeError(\"formatDate: year must be 0000-9999\");\n  }\n\n  yyyy = (\"000\" + year).slice(-4);\n  mm = (\"0\" + (dateInRange.getMonth() + 1)).slice(-2);\n  dd = (\"0\" + dateInRange.getDate()).slice(-2);\n  return yyyy + \"/\" + mm + \"/\" + dd;\n};\n\nvar getEpochDateAsISO = function getEpochDateAsISO(strEpoch) {\n  var num,\n      date = null;\n\n  if (strEpoch && isNum(strEpoch)) {\n    num = Number.parseInt(strEpoch, 10);\n    date = new Date(num);\n    if (date) date = getDateAsISO(date);\n  }\n\n  return date;\n}; // return a simple US endian formatted date from a date object\n// returns a date object in iso standard: mm-dd-yyyy\n\n\nvar getDateAsUSEndian = function getDateAsUSEndian(dateInRange) {\n  var year = dateInRange.getFullYear(),\n      isInRange = year >= 0 && year <= 9999,\n      yyyy,\n      mm,\n      dd;\n  if (!isInRange) throw RangeError(\"formatDate: year must be 0000-9999\");\n  yyyy = (\"000\" + year).slice(-4);\n  mm = (\"0\" + (dateInRange.getMonth() + 1)).slice(-2);\n  dd = (\"0\" + dateInRange.getDate()).slice(-2);\n  return mm + \"/\" + dd + '/' + yyyy;\n}; // accepts a string or int epoch\n\n\nvar getEpochDateAsUSEndian = function getEpochDateAsUSEndian(strEpoch) {\n  var num, date;\n\n  if (strEpoch && isNum(strEpoch)) {\n    num = Number.parseInt(strEpoch, 10);\n    date = new Date(num);\n    if (date) return getDateAsUSEndian(date);\n  }\n\n  return null;\n}; // return monthly array of dates within the range of bgnDate and endDate. An\n// optional filter function fn may be provided as the third parameter.\n// \n// bgnDate will be the first element in the returned array\n\n\nvar yieldRangeMonthly = function yieldRangeMonthly(bgnDate, endDate, filter) {\n  var date = new Date(bgnDate),\n      dateArr = [],\n      endD = getTimeEndMonth(endDate);\n\n  filter = filter || function (d) {\n    return d;\n  };\n\n  while (date < endD) {\n    dateArr.push(filter(date));\n    date = getMonthFromDate(date, 1);\n  }\n\n  return dateArr;\n}; // return daily array of dates within the range of bgnDate and endDate. An\n// optional filter function fn may be provided as the third parameter.\n// \n// bgnDate will be the first element in the returned array\n\n\nvar yieldRangeDaily = function yieldRangeDaily(bgnDate, endDate, filter) {\n  var bgnD = new Date(bgnDate),\n      endD = new Date(endDate),\n      dateArr = [],\n      f = filter || function (d) {\n    return d;\n  };\n\n  while (bgnD < endD) {\n    dateArr.push(f(new Date(bgnD)));\n    bgnD = getDayFromDate(bgnD, 1);\n  }\n\n  return dateArr;\n}; // return an object whose properties define the elapsed time between\n// bgnDate and endDate\n\n\nvar getElapsedTimeObj = function getElapsedTimeObj(bgnDate, endDate) {\n  var ms = endDate.getTime() - bgnDate.getTime(),\n      floor = Math.floor;\n  return {\n    ms: floor(ms) % 1000,\n    sec: floor(ms / 1000) % 60,\n    // ms in sec  : 1000\n    min: floor(ms / 60000) % 60,\n    // ms in min  : 1000 * 60,\n    hour: floor(ms / 3600000) % 24,\n    // ms in hour : 1000 * 60 * 60,\n    day: floor(ms / 86400000) // ms in day  : 1000 * 60 * 60 * 24; \n\n  };\n};\n\nvar getElapsedTimeFormatted = function getElapsedTimeFormatted(bgnDate, endDate) {\n  var e = getElapsedTimeObj(bgnDate, endDate),\n      min = (e.min.length > 1 ? '' : '0') + e.min,\n      sec = (e.sec.length > 1 ? '' : '0') + e.sec,\n      ms = e.ms.length > 2 ? e.ms[0] + e.ms[1] : e.ms;\n  return min + ':' + (sec.length ? '' : '0') + sec + ':' + ms + ' (mm:ss:ms)';\n}; // return true if given dates fall within the same range specified by `type`\n// \n// are dates within the same `day`?\n// are dates within the same `month`?\n// are dates within the same `year`?\n// \n// type === 'month' | 'year' | 'day'\n\n\nvar isDatesInRange = function isDatesInRange(dateObj1, dateObj2, type) {\n  var d1YMDArr = getDateYMDStrArr(dateObj1),\n      d2YMDArr = getDateYMDStrArr(dateObj2),\n      isInRange = false;\n\n  if (type === 'day') {\n    isInRange = d1YMDArr[0] === d2YMDArr[0] && d1YMDArr[1] === d2YMDArr[1] && d1YMDArr[2] === d2YMDArr[2];\n  } else if (type === 'month') {\n    isInRange = d1YMDArr[0] === d2YMDArr[0] && d1YMDArr[1] === d2YMDArr[1];\n  } else if (type === 'year') {\n    isInRange = d1YMDArr[0] === d2YMDArr[0];\n  }\n\n  return isInRange;\n}; // return a date that is formatted according to the given unicode formatStr\n// http://cldr.unicode.org/translation/date-time\n// \n// using this date object:\n// var date = new Date(1365222221485),\n// \n// each of the following formats would return a result given below:\n// format: \"MMMM d, y h:mm:ss a z\"\n// return: \"April 5, 2013 9:23:41 pm 420\"\n// \n// format: \"MMM d, y h:mm:ss a\"\n// return: \"Apr 5, 2013 9:23:41 pm\"\n// \n// format: \"M/d/yyyy h:mm a\"\n// return: \"4/5/2013 9:23 pm\"\n\n\nvar applyFormatDate = function applyFormatDate(date, format) {\n  var d = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Date(date);\n  var YMDArr,\n      year = d.getFullYear(),\n      isInRange = year >= 0 && year <= 9999,\n      hour,\n      // eslint-disable-next-line max-len\n  tzRe = /'[^']*'|\"[^\"]*\"|yyyyy|yyyy|yyy|yy|y|MMMMM|MMMM|MMM|MM|M|ddddd|dddd|ddd|dd|d|EEEEE|EEEE|EEE|EE|E|hh|h|HH|H|mm|m|ss|s|zzzz|z|a|v/g;\n\n  if (!isInRange) {//throw RangeError(\"formatDate: year must be 0000-9999\");\n  }\n\n  YMDArr = getDateYMDStrArr(d);\n  return format.replace(tzRe, function (match) {\n    switch (match) {\n      case \"y\":\n        // year, numeric, full digit year, 1 to 4 digits\n        return YMDArr[0].replace(/^00?0?/, '');\n\n      case \"yy\":\n        // year, numeric, exactly two digit\n        return YMDArr[0].slice(2, 4);\n\n      case \"yyyy\":\n        // year, numeric, full year\n        return YMDArr[0];\n\n      case \"yyyyy\":\n        // year, narrow, one char\n        return YMDArr[0].slice(3, 4);\n\n      case \"M\":\n        // month, numeric, at least one digit\n        return YMDArr[1].replace(/^0/, '');\n\n      case \"MM\":\n        // month, numeric, at least two digits, 0-padding\n        return YMDArr[1];\n\n      case \"MMM\":\n        // month, alpha, abbreviated string\n        // eslint-disable-next-line max-len\n        return localeMethods_getNumericMonthNameAbbrev(YMDArr[1].replace(/^0/, ''));\n\n      case \"MMMM\":\n        // month, alpha, full string\n        return localeMethods_getNumericMonthNameWide(YMDArr[1].replace(/^0/, ''));\n\n      case \"MMMMM\":\n        // month, alpha, narrow, one char\n        // eslint-disable-next-line max-len\n        return localeMethods_getNumericMonthNameAbbrev(YMDArr[1].replace(/^0/, ''))[0];\n\n      case \"d\":\n        // day, numeric, at least one digit\n        return YMDArr[2].replace(/^0/, '');\n\n      case \"dd\":\n        // day, numeric, at least two digits, 0-padding\n        return YMDArr[2];\n\n      case \"ddd\":\n        // day, alpha, abbreviated string\n        return localeMethods_getNumericDayNameAbbrev(YMDArr[2].replace(/^0/, ''));\n\n      case \"dddd\":\n        // day, alpha, full string\n        return localeMethods_getNumericDayNameWide(YMDArr[2].replace(/^0/, ''));\n\n      case \"ddddd\":\n        // day, alpha, narrow, one char\n        // eslint-disable-next-line max-len\n        return localeMethods_getNumericDayNameAbbrev(YMDArr[2].replace(/^0/, ''))[0];\n\n      case \"E\":\n        // day, alpha, abbreviated string\n        return localeMethods_getNumericDayNameAbbrev(YMDArr[2].replace(/^0/, ''));\n\n      case \"EE\":\n        // day, alpha, abbreviated string\n        return localeMethods_getNumericDayNameAbbrev(YMDArr[2].replace(/^0/, ''));\n\n      case \"EEE\":\n        // day, alpha, abbreviated string\n        return localeMethods_getNumericDayNameAbbrev(YMDArr[2].replace(/^0/, ''));\n\n      case \"EEEE\":\n        // day, alpha, full string\n        return localeMethods_getNumericDayNameWide(YMDArr[2].replace(/^0/, ''));\n\n      case \"EEEEE\":\n        // day, numeric, at least one digit\n        return YMDArr[2].replace(/^0*/, '');\n\n      case \"h\":\n        // hour, numeric, at least one digit\n        return d.getHours() % 12 || 12;\n\n      case \"hh\":\n        // hour, numeric, 12pm at least two digits, 0-padding\n        return (\"0\" + (d.getHours() % 12 || 12)).slice(-2);\n\n      case \"HH\":\n        // hour, numeric, 24pm at least two digits, 0-padding\n        return (\"0\" + d.getHours()).slice(-2);\n\n      case \"H\":\n        // hour, numeric, 24pm\n        return d.getHours();\n\n      case \"m\":\n        // minute, numeric, at least one digit\n        return d.getMinutes();\n\n      case \"mm\":\n        // minute, numeric, at least two digits, 0-padding\n        return (\"0\" + d.getMinutes()).slice(-2);\n\n      case \"s\":\n        // second, numeric, at least one digit\n        return d.getSeconds();\n\n      case \"ss\":\n        // second, numeric, at least two digits, 0-padding\n        return (\"0\" + d.getSeconds()).slice(-2);\n\n      case \"a\":\n        // am, a, pm, p, noon, n (only used with `h`)\n        return d.getHours() < 12 ? 'am' : 'pm';\n\n      case \"zzzz\":\n        // timezone, numeric, at least 4 digits, 0-padding\n        return (\"000\" + d.getTimezoneOffset()).slice(-4);\n\n      case \"z\":\n        // timezone, numeric\n        return d.getTimezoneOffset();\n\n      case \"v\":\n        // timezone, numeric\n        return d.getTimezoneOffset();\n\n      default:\n        return match;\n    }\n  });\n}; // remove all chars. all formatting\n// tokenize around whitespace\n// 10/1/2012 => 10 1 2012\n// M/d/yyyy => M d yyyy\n// \n// will break given:\n// dStr: 10/1/2012039\n// format: M/d/yyyy\n\n\nvar extractDateFormatted = function extractDateFormatted(dStr, format) {\n  var x,\n      ymdArr = [0, 0, 0, 0, 0, 0, 0, 0],\n      ymdTestArr,\n      token,\n      tokenItem,\n      finDateObj,\n      formatRaw = format.replace(/[^\\d\\w]/gi, ' '),\n      dStrRaw = dStr.replace(/[^\\d\\w]/gi, ' '),\n      formatTokens = formatRaw.split(' '),\n      dStrTokens = dStrRaw.split(' ');\n\n  function getAsISO(tokenItem, dateStrObj) {\n    var tokenItemL = tokenItem.toLowerCase(); //return Object.keys(dateStrObj)\n    //  .find(key => dateStrObj[key].toLowerCase() === tokenItemL) || '';\n\n    for (var o in dateStrObj) {\n      if (dateStrObj.hasOwnProperty(o)) {\n        if (dateStrObj[o].toLowerCase() === tokenItemL) return o;\n      }\n    }\n\n    return '';\n  }\n\n  formatTokens.forEach(function (token, x) {\n    tokenItem = dStrTokens[x];\n\n    if (token.match(/yyyyy|yyyy|yyy|yy|y/)) {\n      if (token === \"y\" && isNum(tokenItem)) {\n        // year, numeric, full digit year, 1 to 4 digits\n        if (tokenItem.match(/^\\d\\d?\\d?\\d?$/)) {\n          ymdArr[0] = tokenItem + '';\n        }\n      } else if (token === \"yy\" && isNum(tokenItem)) {\n        // year, numeric, exactly two digit\n        if (tokenItem.match(/^\\d\\d$/)) {\n          ymdArr[0] = tokenItem + '';\n        }\n      } else if (token === \"yyyy\" && isNum(tokenItem)) {\n        // year, numeric, full year\n        if (tokenItem.match(/^\\d\\d?\\d?\\d?$/)) {\n          ymdArr[0] = tokenItem + '';\n        }\n      } else if (token === \"yyyyy\" && isNum(tokenItem)) {\n        // year, narrow, one char\n        if (tokenItem.match(/^\\d?$/)) {\n          ymdArr[0] = tokenItem + '';\n        }\n      }\n    } else if (token.match(/MMMMM|MMMM|MMM|MM|M/)) {\n      if (token === \"M\" && isNum(tokenItem)) {\n        // month, numeric, at least one digit\n        if (tokenItem.match(/^\\d\\d?$/)) {\n          ymdArr[1] = tokenItem + '';\n        }\n      } else if (token === \"MM\" && isNum(tokenItem)) {\n        // month, numeric, at least two digits, 0-padding\n        if (tokenItem.match(/^\\d\\d?$/)) {\n          ymdArr[1] = tokenItem + '';\n        }\n      } else if (token === \"MMM\") {\n        // month, alpha, abbreviated string\n        // eslint-disable-next-line max-len\n        ymdArr[1] = getAsISO(tokenItem, localeMethods.getDateSymbolsMonthAbbrev());\n      } else if (token === \"MMMM\") {\n        // month, alpha, full string\n        // eslint-disable-next-line max-len\n        ymdArr[1] = getAsISO(tokenItem, localeMethods.getDateSymbolsMonthWide());\n      } else if (token === \"MMMMM\") {\n        // month, alpha, narrow, one char\n        // eslint-disable-next-line max-len\n        ymdArr[1] = getAsISO(tokenItem, localeMethods.getDateSymbolsMonthNarrow());\n      }\n    } else if (token.match(/ddddd|dddd|ddd|dd|d/)) {\n      if (token === \"d\" && isNum(tokenItem)) {\n        // day, numeric, at least one digit\n        if (tokenItem.match(/^\\d\\d?$/)) {\n          ymdArr[2] = tokenItem + '';\n        }\n      } else if (token === \"dd\" && isNum(tokenItem)) {\n        // day, numeric, at least two digits, 0-padding\n        if (tokenItem.match(/^\\d\\d?$/)) {\n          ymdArr[2] = tokenItem + '';\n        }\n      } else if (token === \"ddd\") {\n        // day, alpha, abbreviated string\n        // eslint-disable-next-line max-len\n        ymdArr[2] = getAsISO(tokenItem, localeMethods.getDateSymbolsDayAbbrev());\n      } else if (token === \"dddd\") {\n        // day, alpha, full string\n        ymdArr[2] = getAsISO(tokenItem, localeMethods.getDateSymbolsDayWide());\n      } else if (token === \"ddddd\") {\n        // day, alpha, narrow, one char\n        // eslint-disable-next-line max-len\n        ymdArr[2] = getAsISO(tokenItem, localeMethods.getDateSymbolsDayNarrow());\n      }\n    } else if (token.match(/h|H/) && isNum(tokenItem)) {\n      //hour. h for 12 hour, H for 24.\n      if (token.match(/h/)) {\n        ymdArr[3] = +tokenItem % 12 || 12;\n      } else {\n        ymdArr[3] = tokenItem + '';\n      }\n    } else if (token.match(/mm?/) && isNum(tokenItem)) {\n      //minute\n      ymdArr[4] = tokenItem + '';\n    } else if (token.match(/ss?/) && isNum(tokenItem)) {\n      //second\n      ymdArr[5] = tokenItem + '';\n    } else if (token.match(/a/)) {\n      // am, a, pm, p, noon, n\n      if (/pm?/.test(tokenItem)) {\n        // assumes pm occurs after hour\n        ymdArr[3] += 12;\n      }\n    } else if (token.match(/v|z/)) {\n      // Pacific Time, Paris Time\n      ymdArr[6] = tokenItem + '';\n    }\n  });\n\n  if (ymdArr[0] && ymdArr[1] && ymdArr[2]) {\n    // if `m` or `d` values are too large or small, dateObj is still\n    // generated as per specificiation `15.9 Date Objects`\n    // to avoid confusion we invalidate such dates by reconverting them\n    // to ymdArr and checking the values to be sure they match\n    //\n    // ex. '01/40/1958' would not pass through here\n    if (finDateObj = getYMDArrDate(ymdArr)) {\n      ymdTestArr = getDateYMDNumArr(finDateObj);\n\n      if (ymdTestArr[0] === +ymdArr[0] && ymdTestArr[1] === +ymdArr[1] && ymdTestArr[2] === +ymdArr[2]) {\n        return finDateObj;\n      }\n    }\n  }\n};\n\nvar _default = {\n  isNum: isNum,\n  dateRegex: dateRegex,\n  defFormatRegex: defFormatRegex,\n  localeMethods: localeMethods,\n  localeMethods_getNumericMonthNameAbbrev: localeMethods_getNumericMonthNameAbbrev,\n  localeMethods_getNumericMonthNameWide: localeMethods_getNumericMonthNameWide,\n  localeMethods_getNumericDayNameAbbrev: localeMethods_getNumericDayNameAbbrev,\n  localeMethods_getNumericDayNameWide: localeMethods_getNumericDayNameWide,\n  isDateObj: isDateObj,\n  getDateYStr: getDateYStr,\n  getDateMStr: getDateMStr,\n  getDateDStr: getDateDStr,\n  getDatehhStr: getDatehhStr,\n  getDatemmStr: getDatemmStr,\n  getDatessStr: getDatessStr,\n  getDateYNum: getDateYNum,\n  getDateMNum: getDateMNum,\n  getDateDNum: getDateDNum,\n  getDateYMDStrArr: getDateYMDStrArr,\n  getDateYMDNumArr: getDateYMDNumArr,\n  getYMDArrDate: getYMDArrDate,\n  getSecFromDate: getSecFromDate,\n  getSecFromTodayDate: getSecFromTodayDate,\n  getMinFromDate: getMinFromDate,\n  getMinFromTodayDate: getMinFromTodayDate,\n  getHourFromDate: getHourFromDate,\n  getHourFromTodayDate: getHourFromTodayDate,\n  getDayFromDate: getDayFromDate,\n  getDayFromTodayDate: getDayFromTodayDate,\n  getMonthFromDate: getMonthFromDate,\n  getMonthFromTodayDate: getMonthFromTodayDate,\n  getYearFromDate: getYearFromDate,\n  getYearFromTodayDate: getYearFromTodayDate,\n  getDaysInMonth: getDaysInMonth,\n  getMFittedYMDNumArr: getMFittedYMDNumArr,\n  getDFittedYMDNumArr: getDFittedYMDNumArr,\n  getFirstOfMonth: getFirstOfMonth,\n  getLastOfMonth: getLastOfMonth,\n  isDateBeforeDate: isDateBeforeDate,\n  isDateBeforeToday: isDateBeforeToday,\n  getTimeBgnMonth: getTimeBgnMonth,\n  getTimeEndMonth: getTimeEndMonth,\n  getTimeBgnDay: getTimeBgnDay,\n  getTimeEndDay: getTimeEndDay,\n  parseISO8601: parseISO8601,\n  isDefISOFormat: isDefISOFormat,\n  parseUSEndian: parseUSEndian,\n  isDefUSEndianFormat: isDefUSEndianFormat,\n  getDateAsISO: getDateAsISO,\n  getEpochDateAsISO: getEpochDateAsISO,\n  getDateAsUSEndian: getDateAsUSEndian,\n  getEpochDateAsUSEndian: getEpochDateAsUSEndian,\n  yieldRangeMonthly: yieldRangeMonthly,\n  yieldRangeDaily: yieldRangeDaily,\n  getElapsedTimeObj: getElapsedTimeObj,\n  getElapsedTimeFormatted: getElapsedTimeFormatted,\n  isDatesInRange: isDatesInRange,\n  applyFormatDate: applyFormatDate,\n  extractDateFormatted: extractDateFormatted\n};\nexports[\"default\"] = _default;\n"]},"metadata":{},"sourceType":"script"}