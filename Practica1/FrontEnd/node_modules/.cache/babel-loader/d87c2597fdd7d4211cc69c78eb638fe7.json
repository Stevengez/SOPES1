{"ast":null,"code":"var _jsxFileName = \"/home/stevengez/Documentos/GitHub/SOPES1/Practica1/FrontEnd/src/Components/Records.js\";\nimport React, { Component } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { API_SERVER, API_PORT } from '../Config/credentials';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  name: 'Timestamp',\n  selector: row => row.timestamp\n}, {\n  name: 'Left',\n  selector: row => row.left\n}, {\n  name: 'Right',\n  selector: row => row.right\n}, {\n  name: 'Operations',\n  selector: row => row.operator\n}, {\n  name: 'Result',\n  selector: row => function (row) {\n    switch (row.operator) {\n      case \"+\":\n        return (row.left + row.right).toString();\n\n      case \"-\":\n        return (row.left - row.right).toString();\n\n      case \"*\":\n        return (row.left * row.right).toString();\n\n      case \"/\":\n        return (row.left / row.right).toString();\n\n      default:\n        return \"0\";\n    }\n  }\n}];\nexport default class Records extends Component {\n  constructor() {\n    super();\n\n    this.getRecordsFromAPI = async () => {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await fetch(`${API_SERVER}:${API_PORT}/getRecords/`, requestOptions);\n      const result = await response.json();\n      return result;\n    };\n\n    this.addLocalOperation = newOperation => {};\n\n    this.dataTable = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.setLocalHandler(this.addLocalOperation);\n    this.getRecordsFromAPI().then(result => {\n      result.forEach(item => {\n        console.log(item);\n      });\n    });\n    console.log(\"Table ref: \", this.dataTable);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        columns: this.columns,\n        ref: this.dataTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/stevengez/Documentos/GitHub/SOPES1/Practica1/FrontEnd/src/Components/Records.js"],"names":["React","Component","DataTable","API_SERVER","API_PORT","columns","name","selector","row","timestamp","left","right","operator","toString","Records","constructor","getRecordsFromAPI","requestOptions","method","headers","response","fetch","result","json","addLocalOperation","newOperation","dataTable","createRef","componentDidMount","props","setLocalHandler","then","forEach","item","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,uBAArC;;AACA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACC;AAFzB,CADY,EAKZ;AACIH,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACE;AAFzB,CALY,EASZ;AACIJ,EAAAA,IAAI,EAAE,OADV;AAEIC,EAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACG;AAFzB,CATY,EAaZ;AACIL,EAAAA,IAAI,EAAE,YADV;AAEIC,EAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACI;AAFzB,CAbY,EAiBZ;AACIN,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,QAAQ,EAAGC,GAAD,IAAS,UAASA,GAAT,EAAa;AAC5B,YAAOA,GAAG,CAACI,QAAX;AACI,WAAK,GAAL;AACI,eAAO,CAACJ,GAAG,CAACE,IAAJ,GAASF,GAAG,CAACG,KAAd,EAAqBE,QAArB,EAAP;;AACJ,WAAK,GAAL;AACI,eAAO,CAACL,GAAG,CAACE,IAAJ,GAASF,GAAG,CAACG,KAAd,EAAqBE,QAArB,EAAP;;AACJ,WAAK,GAAL;AACI,eAAO,CAACL,GAAG,CAACE,IAAJ,GAASF,GAAG,CAACG,KAAd,EAAqBE,QAArB,EAAP;;AACJ,WAAK,GAAL;AACI,eAAO,CAACL,GAAG,CAACE,IAAJ,GAASF,GAAG,CAACG,KAAd,EAAqBE,QAArB,EAAP;;AACJ;AACI,eAAO,GAAP;AAVR;AAYH;AAfL,CAjBY,CAAhB;AAqCA,eAAe,MAAMC,OAAN,SAAsBb,SAAtB,CAAgC;AAE3Cc,EAAAA,WAAW,GAAE;AACT;;AADS,SAebC,iBAfa,GAeO,YAAY;AAC5B,YAAMC,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,KADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAe;AAAjB;AAFU,OAAvB;AAKA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAElB,UAAW,IAAGC,QAAS,cAA3B,EAA0Ca,cAA1C,CAA5B;AACA,YAAMK,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,aAAOD,MAAP;AACH,KAxBY;;AAAA,SA0BbE,iBA1Ba,GA0BQC,YAAD,IAAkB,CAErC,CA5BY;;AAET,SAAKC,SAAL,gBAAiB1B,KAAK,CAAC2B,SAAN,EAAjB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,eAAX,CAA2B,KAAKN,iBAAhC;AACA,SAAKR,iBAAL,GAAyBe,IAAzB,CAA+BT,MAAD,IAAY;AACtCA,MAAAA,MAAM,CAACU,OAAP,CAAgBC,IAAD,IAAU;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,OAFD;AAGH,KAJD;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,KAAKT,SAA/B;AACH;;AAiBDU,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAK/B,OAAzB;AAAkC,QAAA,GAAG,EAAE,KAAKqB;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAtC0C","sourcesContent":["import React, {Component} from 'react';\nimport DataTable from 'react-data-table-component';\nimport { API_SERVER, API_PORT } from '../Config/credentials';\nconst columns = [\n    {\n        name: 'Timestamp',\n        selector: row => row.timestamp\n    },\n    {\n        name: 'Left',\n        selector: row => row.left\n    },\n    {\n        name: 'Right',\n        selector: row => row.right\n    },\n    {\n        name: 'Operations',\n        selector: row => row.operator\n    },\n    {\n        name: 'Result',\n        selector: (row) => function(row){\n            switch(row.operator){\n                case \"+\":\n                    return (row.left+row.right).toString();\n                case \"-\":\n                    return (row.left-row.right).toString();\n                case \"*\":\n                    return (row.left*row.right).toString();\n                case \"/\":\n                    return (row.left/row.right).toString();\n                default:\n                    return \"0\";\n            }\n        }\n    },\n    \n];\n\nexport default class Records extends Component {\n\n    constructor(){\n        super();\n        this.dataTable = React.createRef();\n    }\n\n    componentDidMount(){\n        this.props.setLocalHandler(this.addLocalOperation);\n        this.getRecordsFromAPI().then((result) => {\n            result.forEach((item) => {\n                console.log(item);\n            });\n        });\n        console.log(\"Table ref: \",this.dataTable);\n    }\n\n    getRecordsFromAPI = async () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type':'application/json'}\n        }\n\n        const response = await fetch(`${API_SERVER}:${API_PORT}/getRecords/`, requestOptions);\n        const result = await response.json();\n        return result;\n    }\n\n    addLocalOperation = (newOperation) => {\n                                \n    }\n\n    render(){\n        return(\n            <div>\n                <DataTable columns={this.columns} ref={this.dataTable}/>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}