{"ast":null,"code":"var _jsxFileName = \"/home/stevengez/Documentos/GitHub/SOPES1/Practica1/FrontEnd/src/Components/Records.js\";\nimport React, { Component } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  name: 'Timestamp',\n  selector: row => row.timestamp\n}, {\n  name: 'Left',\n  selector: row => row.left\n}, {\n  name: 'Right',\n  selector: row => row.right\n}, {\n  name: 'Operations',\n  selector: row => row.operator\n}, {\n  name: 'Result',\n  selector: row => function (row) {\n    switch (row.operator) {\n      case \"+\":\n        return (row.left + row.right).toString();\n\n      case \"-\":\n        return (row.left - row.right).toString();\n\n      case \"*\":\n        return (row.left * row.right).toString();\n\n      case \"/\":\n        return (row.left / row.right).toString();\n\n      default:\n        return \"0\";\n    }\n  }\n}];\nexport default class Records extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.getRecordsFromAPI = async () => {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await fetch(``, requestOptions);\n    };\n\n    this.addLocalOperation = newOperation => {};\n  }\n\n  componentDidMount() {\n    this.props.setLocalHandler(this.addLocalOperation);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        columns: this.columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/stevengez/Documentos/GitHub/SOPES1/Practica1/FrontEnd/src/Components/Records.js"],"names":["React","Component","DataTable","columns","name","selector","row","timestamp","left","right","operator","toString","Records","getRecordsFromAPI","requestOptions","method","headers","response","fetch","addLocalOperation","newOperation","componentDidMount","props","setLocalHandler","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AACA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACC;AAFzB,CADY,EAKZ;AACIH,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACE;AAFzB,CALY,EASZ;AACIJ,EAAAA,IAAI,EAAE,OADV;AAEIC,EAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACG;AAFzB,CATY,EAaZ;AACIL,EAAAA,IAAI,EAAE,YADV;AAEIC,EAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACI;AAFzB,CAbY,EAiBZ;AACIN,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,QAAQ,EAAGC,GAAD,IAAS,UAASA,GAAT,EAAa;AAC5B,YAAOA,GAAG,CAACI,QAAX;AACI,WAAK,GAAL;AACI,eAAO,CAACJ,GAAG,CAACE,IAAJ,GAASF,GAAG,CAACG,KAAd,EAAqBE,QAArB,EAAP;;AACJ,WAAK,GAAL;AACI,eAAO,CAACL,GAAG,CAACE,IAAJ,GAASF,GAAG,CAACG,KAAd,EAAqBE,QAArB,EAAP;;AACJ,WAAK,GAAL;AACI,eAAO,CAACL,GAAG,CAACE,IAAJ,GAASF,GAAG,CAACG,KAAd,EAAqBE,QAArB,EAAP;;AACJ,WAAK,GAAL;AACI,eAAO,CAACL,GAAG,CAACE,IAAJ,GAASF,GAAG,CAACG,KAAd,EAAqBE,QAArB,EAAP;;AACJ;AACI,eAAO,GAAP;AAVR;AAYH;AAfL,CAjBY,CAAhB;AAqCA,eAAe,MAAMC,OAAN,SAAsBX,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAM3CY,iBAN2C,GAMvB,YAAY;AAC5B,YAAMC,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,KADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAe;AAAjB;AAFU,OAAvB;AAKA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,EAAF,EAAKJ,cAAL,CAA5B;AAEH,KAd0C;;AAAA,SAgB3CK,iBAhB2C,GAgBtBC,YAAD,IAAkB,CAErC,CAlB0C;AAAA;;AAE3CC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,eAAX,CAA2B,KAAKJ,iBAAhC;AACH;;AAgBDK,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKrB;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA1B0C","sourcesContent":["import React, {Component} from 'react';\nimport DataTable from 'react-data-table-component';\nconst columns = [\n    {\n        name: 'Timestamp',\n        selector: row => row.timestamp\n    },\n    {\n        name: 'Left',\n        selector: row => row.left\n    },\n    {\n        name: 'Right',\n        selector: row => row.right\n    },\n    {\n        name: 'Operations',\n        selector: row => row.operator\n    },\n    {\n        name: 'Result',\n        selector: (row) => function(row){\n            switch(row.operator){\n                case \"+\":\n                    return (row.left+row.right).toString();\n                case \"-\":\n                    return (row.left-row.right).toString();\n                case \"*\":\n                    return (row.left*row.right).toString();\n                case \"/\":\n                    return (row.left/row.right).toString();\n                default:\n                    return \"0\";\n            }\n        }\n    },\n    \n];\n\nexport default class Records extends Component {\n\n    componentDidMount(){\n        this.props.setLocalHandler(this.addLocalOperation);\n    }\n\n    getRecordsFromAPI = async () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type':'application/json'}\n        }\n\n        const response = await fetch(``, requestOptions);\n\n    }\n\n    addLocalOperation = (newOperation) => {\n                        \n    }\n\n    render(){\n        return(\n            <div>\n                <DataTable columns={this.columns}/>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}