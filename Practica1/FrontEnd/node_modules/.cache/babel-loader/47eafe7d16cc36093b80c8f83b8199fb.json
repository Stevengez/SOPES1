{"ast":null,"code":"var _jsxFileName = \"/home/stevengez/Documentos/GitHub/SOPES1/Practica1/FrontEnd/src/Components/Records.js\";\nimport React, { Component } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { API_SERVER, API_PORT } from '../Config/credentials';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  name: 'Timestamp',\n  selector: row => row.timestamp\n}, {\n  name: 'Left',\n  selector: row => row.left\n}, {\n  name: 'Right',\n  selector: row => row.right\n}, {\n  name: 'Operations',\n  selector: row => row.operator\n}, {\n  name: 'Result',\n  selector: row => {\n    switch (row.operator) {\n      case \"+\":\n        console.log(\"Suma\");\n        return (row.left + row.right).toString();\n\n      case \"-\":\n        return (row.left - row.right).toString();\n\n      case \"*\":\n        return (row.left * row.right).toString();\n\n      case \"/\":\n        return (row.left / row.right).toString();\n\n      default:\n        return \"0\";\n    }\n  }\n}];\nconst data1 = [{\n  left: 10,\n  right: 20,\n  operator: \"+\",\n  timestamp: \"Hoy\"\n}];\nexport default class Records extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n\n    this.getRecordsFromAPI = async () => {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await fetch(`${API_SERVER}:${API_PORT}/getRecords/`, requestOptions);\n      const result = await response.json();\n      return result;\n    };\n\n    this.addLocalOperation = newOperation => {\n      console.log(this.state.data);\n    };\n\n    this.getRecordsFromAPI().then(result => {\n      let opList = [];\n      result.forEach(item => {\n        opList.push({\n          left: item.left,\n          right: item.right,\n          operator: item.operator,\n          timestamp: item.timestamp\n        }); //this.setState({\n        //  data: opList\n        //});\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.setLocalHandler(this.addLocalOperation);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        columns: this.columns,\n        data: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/stevengez/Documentos/GitHub/SOPES1/Practica1/FrontEnd/src/Components/Records.js"],"names":["React","Component","DataTable","API_SERVER","API_PORT","columns","name","selector","row","timestamp","left","right","operator","console","log","toString","data1","Records","constructor","props","state","data","getRecordsFromAPI","requestOptions","method","headers","response","fetch","result","json","addLocalOperation","newOperation","then","opList","forEach","item","push","componentDidMount","setLocalHandler","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport DataTable from 'react-data-table-component';\nimport { API_SERVER, API_PORT } from '../Config/credentials';\n\nconst columns = [\n    {\n        name: 'Timestamp',\n        selector: row => row.timestamp\n    },\n    {\n        name: 'Left',\n        selector: row => row.left\n    },\n    {\n        name: 'Right',\n        selector: row => row.right\n    },\n    {\n        name: 'Operations',\n        selector: row => row.operator\n    },\n    {\n        name: 'Result',\n        selector: (row) => {\n            switch(row.operator){\n                case \"+\":\n                    console.log(\"Suma\");\n                    return (row.left+row.right).toString();\n                case \"-\":\n                    return (row.left-row.right).toString();\n                case \"*\":\n                    return (row.left*row.right).toString();\n                case \"/\":\n                    return (row.left/row.right).toString();\n                default:\n                    return \"0\";\n            }\n        }\n    },\n    \n];\n\nconst data1 = [{\n    left: 10,\n    right: 20,\n    operator: \"+\",\n    timestamp: \"Hoy\"\n}];\n\nexport default class Records extends Component {\n\n    state = {\n        data: []\n    };\n\n    constructor(props){\n        super(props);\n        this.getRecordsFromAPI().then((result) => {\n            let opList = [];\n            result.forEach((item) => {\n\n                opList.push({\n                    left: item.left,\n                    right: item.right,\n                    operator: item.operator,\n                    timestamp: item.timestamp\n                });\n\n                //this.setState({\n                  //  data: opList\n                //});\n            });\n        });\n    }\n\n\n\n    componentDidMount(){\n        this.props.setLocalHandler(this.addLocalOperation);\n    }\n\n    getRecordsFromAPI = async () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type':'application/json'}\n        }\n\n        const response = await fetch(`${API_SERVER}:${API_PORT}/getRecords/`, requestOptions);\n        const result = await response.json();\n        return result;\n    }\n\n    addLocalOperation = (newOperation) => {\n        console.log(this.state.data);\n                                \n    }\n\n    render(){\n        return(\n            <div>\n                <DataTable columns={this.columns} data={this.state.data}/>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}