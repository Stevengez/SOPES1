{"ast":null,"code":"var _jsxFileName = \"/home/stevengez/Documentos/GitHub/SOPES1/Practica1/FrontEnd/src/Components/Records.js\";\nimport React, { Component } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { API_SERVER, API_PORT } from '../Config/credentials';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Records extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n\n    this.getRecordsFromAPI = async () => {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await fetch(`${API_SERVER}:${API_PORT}/getRecords/`, requestOptions);\n      const result = await response.json();\n      return result;\n    };\n\n    this.addLocalOperation = newOperation => {\n      console.log(this.state.data);\n    };\n\n    this.columns = [{\n      name: 'Timestamp',\n      selector: row => row.timestamp\n    }, {\n      name: 'Left',\n      selector: row => row.left\n    }, {\n      name: 'Right',\n      selector: row => row.right\n    }, {\n      name: 'Operations',\n      selector: row => row.operator\n    }, {\n      name: 'Result',\n      selector: row => function (row) {\n        return row.left + \" \" + row.right;\n      }\n    }];\n    this.getRecordsFromAPI().then(result => {\n      let opList = [];\n      result.forEach(item => {\n        opList.push({\n          left: item.left,\n          right: item.right,\n          operator: item.operator,\n          timestamp: item.timestamp\n        });\n      });\n      this.setState({\n        data: opList\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.setLocalHandler(this.addLocalOperation);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        columns: this.columns,\n        data: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/stevengez/Documentos/GitHub/SOPES1/Practica1/FrontEnd/src/Components/Records.js"],"names":["React","Component","DataTable","API_SERVER","API_PORT","Records","constructor","props","state","data","getRecordsFromAPI","requestOptions","method","headers","response","fetch","result","json","addLocalOperation","newOperation","console","log","columns","name","selector","row","timestamp","left","right","operator","then","opList","forEach","item","push","setState","componentDidMount","setLocalHandler","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,uBAArC;;AAIA,eAAe,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAM3CK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAJlBC,KAIkB,GAJV;AACJC,MAAAA,IAAI,EAAE;AADF,KAIU;;AAAA,SAoDlBC,iBApDkB,GAoDE,YAAY;AAC5B,YAAMC,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,KADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAe;AAAjB;AAFU,OAAvB;AAKA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,UAAW,IAAGC,QAAS,cAA3B,EAA0CO,cAA1C,CAA5B;AACA,YAAMK,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,aAAOD,MAAP;AACH,KA7DiB;;AAAA,SA+DlBE,iBA/DkB,GA+DGC,YAAD,IAAkB;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,IAAvB;AAEH,KAlEiB;;AAGd,SAAKa,OAAL,GAAe,CACX;AACIC,MAAAA,IAAI,EAAE,WADV;AAEIC,MAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACC;AAFzB,KADW,EAKX;AACIH,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACE;AAFzB,KALW,EASX;AACIJ,MAAAA,IAAI,EAAE,OADV;AAEIC,MAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACG;AAFzB,KATW,EAaX;AACIL,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACI;AAFzB,KAbW,EAiBX;AACIN,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,QAAQ,EAAGC,GAAD,IAAS,UAAUA,GAAV,EAAc;AAC7B,eAAOA,GAAG,CAACE,IAAJ,GAAS,GAAT,GAAaF,GAAG,CAACG,KAAxB;AACH;AAJL,KAjBW,CAAf;AA0BA,SAAKlB,iBAAL,GAAyBoB,IAAzB,CAA+Bd,MAAD,IAAY;AACtC,UAAIe,MAAM,GAAG,EAAb;AACAf,MAAAA,MAAM,CAACgB,OAAP,CAAgBC,IAAD,IAAU;AACrBF,QAAAA,MAAM,CAACG,IAAP,CAAY;AACRP,UAAAA,IAAI,EAAEM,IAAI,CAACN,IADH;AAERC,UAAAA,KAAK,EAAEK,IAAI,CAACL,KAFJ;AAGRC,UAAAA,QAAQ,EAAEI,IAAI,CAACJ,QAHP;AAIRH,UAAAA,SAAS,EAAEO,IAAI,CAACP;AAJR,SAAZ;AAMH,OAPD;AASA,WAAKS,QAAL,CAAc;AACV1B,QAAAA,IAAI,EAAEsB;AADI,OAAd;AAGH,KAdD;AAeH;;AAIDK,EAAAA,iBAAiB,GAAE;AACf,SAAK7B,KAAL,CAAW8B,eAAX,CAA2B,KAAKnB,iBAAhC;AACH;;AAkBDoB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKhB,OAAzB;AAAkC,QAAA,IAAI,EAAE,KAAKd,KAAL,CAAWC;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAhF0C","sourcesContent":["import React, {Component} from 'react';\nimport DataTable from 'react-data-table-component';\nimport { API_SERVER, API_PORT } from '../Config/credentials';\n\n\n\nexport default class Records extends Component {\n\n    state = {\n        data: []\n    };\n\n    constructor(props){\n        super(props);\n\n        this.columns = [\n            {\n                name: 'Timestamp',\n                selector: row => row.timestamp\n            },\n            {\n                name: 'Left',\n                selector: row => row.left,\n            },\n            {\n                name: 'Right',\n                selector: row => row.right,\n            },\n            {\n                name: 'Operations',\n                selector: row => row.operator,\n            },\n            {\n                name: 'Result',\n                selector: (row) => function (row){\n                    return row.left+\" \"+row.right;\n                },\n            },\n            \n        ];\n\n        this.getRecordsFromAPI().then((result) => {\n            let opList = [];\n            result.forEach((item) => {\n                opList.push({\n                    left: item.left,\n                    right: item.right,\n                    operator: item.operator,\n                    timestamp: item.timestamp\n                });\n            });\n\n            this.setState({\n                data: opList\n              });\n        });\n    }\n\n\n\n    componentDidMount(){\n        this.props.setLocalHandler(this.addLocalOperation);\n    }\n\n    getRecordsFromAPI = async () => {\n        const requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type':'application/json'}\n        }\n\n        const response = await fetch(`${API_SERVER}:${API_PORT}/getRecords/`, requestOptions);\n        const result = await response.json();\n        return result;\n    }\n\n    addLocalOperation = (newOperation) => {\n        console.log(this.state.data);\n                                \n    }\n\n    render(){\n        return(\n            <div>\n                <DataTable columns={this.columns} data={this.state.data}/>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}